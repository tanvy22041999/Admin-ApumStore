{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetRevenue),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetRevenueList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetSession),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetRevenue),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetRevenueList),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetSession),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport OrderActions, { OrderActionTypes } from \"../actions/order\";\nimport { getAllOrders, getDetailOrder, updateOrder, deleteOrder, findOrders, getRevenue, getRevenueList, getSessionOrder } from \"../apis/order\";\n/* Notification */\n\nimport io from 'socket.io-client';\nimport NotificationActions from \"../actions/notification\";\nvar socket = io('http://localhost:3000');\n/* Notification */\n\nfunction handleGetList(_ref) {\n  var payload, result, data, _result, _data;\n\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n\n          if (!payload.phone) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 5;\n          return call(findOrders, payload);\n\n        case 5:\n          result = _context.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          throw data;\n\n        case 9:\n          _context.next = 11;\n          return put(OrderActions.onGetListSuccess(data.order, data.total));\n\n        case 11:\n          _context.next = 21;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return call(getAllOrders, payload);\n\n        case 15:\n          _result = _context.sent;\n          _data = get(_result, \"data\");\n\n          if (!(_data.code !== 200)) {\n            _context.next = 19;\n            break;\n          }\n\n          throw _data;\n\n        case 19:\n          _context.next = 21;\n          return put(OrderActions.onGetListSuccess(_data.orders, _data.total));\n\n        case 21:\n          _context.next = 27;\n          break;\n\n        case 23:\n          _context.prev = 23;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 27;\n          return put(OrderActions.onGetListError(_context.t0));\n\n        case 27:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 23]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailOrder, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context2.next = 10;\n          return put(OrderActions.onGetDetailSuccess(data.order));\n\n        case 10:\n          _context2.next = 16;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 16;\n          return put(OrderActions.onGetDetailError(_context2.t0));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 12]]);\n}\n\nfunction handleUpdate(_ref3) {\n  var payload, result, data, detailResult;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(updateOrder, payload.params, payload.id);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context3.next = 10;\n          return call(getDetailOrder, payload.id);\n\n        case 10:\n          detailResult = _context3.sent;\n          _context3.next = 13;\n          return put(OrderActions.onUpdateSuccess(get(detailResult, \"data\")));\n\n        case 13:\n          _context3.next = 15;\n          return put(OrderActions.onGetList());\n\n        case 15:\n          /* Notification */\n          console(data);\n\n          if (!(payload.params.status === 0)) {\n            _context3.next = 20;\n            break;\n          }\n\n          socket.emit('orderChangeStatus', {\n            status: data.order.status,\n            order: data.order._id\n          });\n          _context3.next = 20;\n          return put(NotificationActions.onCreate({\n            name: \"\\u0110\\u01A1n h\\xE0ng \".concat(data.order._id, \" \\u0111ang trong qu\\xE1 tr\\xECnh v\\u1EADn chuy\\u1EC3n\"),\n            image: data.order.order_list[0].image,\n            content: \"\".concat(data.order.email, \" v\\u1EEBa x\\xE1c nh\\u1EADn \\u0111\\u1EB7t h\\xE0ng th\\xE0nh c\\xF4ng\")\n          }));\n\n        case 20:\n          _context3.next = 26;\n          break;\n\n        case 22:\n          _context3.prev = 22;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 26;\n          return put(OrderActions.onUpdateError(_context3.t0));\n\n        case 26:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 22]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref4) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _ref4.id;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(deleteOrder, id);\n\n        case 4:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context4.next = 10;\n          return put(OrderActions.onDeleteSuccess(data));\n\n        case 10:\n          _context4.next = 12;\n          return put(OrderActions.onGetList());\n\n        case 12:\n          _context4.next = 18;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 18;\n          return put(OrderActions.onDeleteError(_context4.t0));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 14]]);\n}\n\nfunction handleGetRevenue(_ref5) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetRevenue$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(getRevenue, payload);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(OrderActions.onGetRevenueSuccess(data.total_price));\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 16;\n          return put(OrderActions.onGetRevenueError(_context5.t0));\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 12]]);\n}\n\nfunction handleGetRevenueList(_ref6) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetRevenueList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(getRevenueList, payload);\n\n        case 4:\n          result = _context6.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context6.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context6.next = 10;\n          return put(OrderActions.onGetRevenueListSuccess(data.order));\n\n        case 10:\n          _context6.next = 16;\n          break;\n\n        case 12:\n          _context6.prev = 12;\n          _context6.t0 = _context6[\"catch\"](1);\n          _context6.next = 16;\n          return put(OrderActions.onGetRevenueListError(_context6.t0));\n\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 12]]);\n}\n\nfunction handleGetSession(_ref7) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetSession$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context7.prev = 1;\n          _context7.next = 4;\n          return call(getSessionOrder, payload);\n\n        case 4:\n          result = _context7.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context7.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context7.next = 10;\n          return put(OrderActions.onGetSessionSuccess(data.count));\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](1);\n          _context7.next = 16;\n          return put(OrderActions.onGetSessionError(_context7.t0));\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[1, 12]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(OrderActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(OrderActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function watchUpdate() {\n  return _regeneratorRuntime.wrap(function watchUpdate$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(OrderActionTypes.UPDATE, handleUpdate);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(OrderActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\nexport function watchGetRevenue() {\n  return _regeneratorRuntime.wrap(function watchGetRevenue$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(OrderActionTypes.GET_REVENUE, handleGetRevenue);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\nexport function watchGetRevenueList() {\n  return _regeneratorRuntime.wrap(function watchGetRevenueList$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(OrderActionTypes.GET_REVENUE_LIST, handleGetRevenueList);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\nexport function watchGetSession() {\n  return _regeneratorRuntime.wrap(function watchGetSession$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(OrderActionTypes.GET_SESSION, handleGetSession);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchUpdate), fork(watchDelete), fork(watchGetRevenue), fork(watchGetRevenueList), fork(watchGetSession)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/order.js"],"names":["handleGetList","handleGetDetail","handleUpdate","handleDelete","handleGetRevenue","handleGetRevenueList","handleGetSession","watchGetList","watchGetDetail","watchUpdate","watchDelete","watchGetRevenue","watchGetRevenueList","watchGetSession","rootSaga","takeEvery","fork","all","call","put","get","OrderActions","OrderActionTypes","getAllOrders","getDetailOrder","updateOrder","deleteOrder","findOrders","getRevenue","getRevenueList","getSessionOrder","io","NotificationActions","socket","payload","phone","result","data","code","onGetListSuccess","order","total","orders","onGetListError","filters","id","onGetDetailSuccess","onGetDetailError","params","detailResult","onUpdateSuccess","onGetList","console","status","emit","_id","onCreate","name","image","order_list","content","email","onUpdateError","onDeleteSuccess","onDeleteError","onGetRevenueSuccess","total_price","onGetRevenueError","onGetRevenueListSuccess","onGetRevenueListError","onGetSessionSuccess","count","onGetSessionError","GET_LIST","GET_DETAIL","UPDATE","DELETE","GET_REVENUE","GET_REVENUE_LIST","GET_SESSION"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport OrderActions, { OrderActionTypes } from \"../actions/order\";\nimport { getAllOrders, getDetailOrder, updateOrder, deleteOrder, findOrders, getRevenue, getRevenueList, getSessionOrder } from \"../apis/order\";\n/* Notification */\nimport io from 'socket.io-client';\nimport NotificationActions from \"../actions/notification\";\nconst socket = io('http://localhost:3000');\n/* Notification */\n\nfunction* handleGetList({ payload }) {\n  try {\n    if(payload.phone){\n      const result = yield call(findOrders, payload);\n      const data = get(result, \"data\");\n      if (data.code !== 200) throw data;\n      yield put(OrderActions.onGetListSuccess(data.order, data.total));\n    }\n    else {\n      const result = yield call(getAllOrders, payload);\n      const data = get(result, \"data\");\n      if (data.code !== 200) throw data;\n      yield put(OrderActions.onGetListSuccess(data.orders, data.total));\n    }\n  } catch (error) {\n    yield put(OrderActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailOrder, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(OrderActions.onGetDetailSuccess(data.order));\n  } catch (error) {\n    yield put(OrderActions.onGetDetailError(error));\n  }\n}\n\nfunction* handleUpdate({ payload }) {\n  try {\n    const result = yield call(updateOrder, payload.params, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    const detailResult = yield call(getDetailOrder, payload.id);\n    yield put(OrderActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(OrderActions.onGetList());\n    /* Notification */\n    console(data)\n    if(payload.params.status === 0){\n      socket.emit('orderChangeStatus', { status: data.order.status, order: data.order._id });\n      yield put(NotificationActions.onCreate({\n        name : `Đơn hàng ${data.order._id} đang trong quá trình vận chuyển`,\n        image : data.order.order_list[0].image,\n        content :  `${data.order.email} vừa xác nhận đặt hàng thành công`\n      }))\n    }\n  /* Notification */\n  } catch (error) {\n    yield put(OrderActions.onUpdateError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id }) {\n  try {\n    const result = yield call(deleteOrder, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(OrderActions.onDeleteSuccess(data));\n    yield put(OrderActions.onGetList());\n  } catch (error) {\n    yield put(OrderActions.onDeleteError(error));\n  }\n}\n\nfunction* handleGetRevenue({ payload }) {\n  try {\n    const result = yield call(getRevenue, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(OrderActions.onGetRevenueSuccess(data.total_price));\n  } catch (error) {\n    yield put(OrderActions.onGetRevenueError(error));\n  }\n}\n\nfunction* handleGetRevenueList({ payload }) {\n  try {\n    const result = yield call(getRevenueList, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(OrderActions.onGetRevenueListSuccess(data.order));\n  } catch (error) {\n    yield put(OrderActions.onGetRevenueListError(error));\n  }\n}\n\nfunction* handleGetSession({ payload }) {\n  try {\n    const result = yield call(getSessionOrder, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(OrderActions.onGetSessionSuccess(data.count));\n  } catch (error) {\n    yield put(OrderActions.onGetSessionError(error));\n  }\n}\n\nexport function* watchGetList() {\n  yield takeEvery(OrderActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(OrderActionTypes.GET_DETAIL, handleGetDetail);\n}\nexport function* watchUpdate() {\n  yield takeEvery(OrderActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(OrderActionTypes.DELETE, handleDelete);\n}\nexport function* watchGetRevenue() {\n  yield takeEvery(OrderActionTypes.GET_REVENUE, handleGetRevenue);\n}\nexport function* watchGetRevenueList() {\n  yield takeEvery(OrderActionTypes.GET_REVENUE_LIST, handleGetRevenueList);\n}\nexport function* watchGetSession() {\n  yield takeEvery(OrderActionTypes.GET_SESSION, handleGetSession);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetDetail),\n    fork(watchUpdate),\n    fork(watchDelete),\n    fork(watchGetRevenue),\n    fork(watchGetRevenueList),\n    fork(watchGetSession),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}