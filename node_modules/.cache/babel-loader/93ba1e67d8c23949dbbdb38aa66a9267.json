{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport OperationActions, { OperationActionTypes } from \"../actions/operations\";\nimport { getAllOperations, getDetailOperation, addOperation, updateOperation, deleteOperation } from \"../apis/operations\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllOperations, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 8;\n          return put(OperationActions.onGetListSuccess(data.operations));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(OperationActions.onGetListError(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailOperation, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context2.next = 10;\n          return put(ColorActions.onGetDetailSuccess(data.category));\n\n        case 10:\n          _context2.next = 16;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 16;\n          return put(ColorActions.onGetDetailError(_context2.t0));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 12]]);\n}\n/**\n *\n * create\n */\n\n\nfunction handleCreate(_ref3) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(addOperation, payload.params);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 201)) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context3.next = 10;\n          return put(ColorActions.onCreateSuccess(data.category));\n\n        case 10:\n          _context3.next = 12;\n          return put(ColorActions.onGetList());\n\n        case 12:\n          _context3.next = 18;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 18;\n          return put(ColorActions.onCreateError(_context3.t0));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 14]]);\n}\n/**\n *\n * update\n */\n\n\nfunction handleUpdate(_ref4) {\n  var payload, result, data, detailResult;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(updateOperation, payload.params, payload.id);\n\n        case 4:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context4.next = 10;\n          return call(getDetailOperation, payload.id);\n\n        case 10:\n          detailResult = _context4.sent;\n          _context4.next = 13;\n          return put(ColorActions.onUpdateSuccess(get(detailResult, \"data\")));\n\n        case 13:\n          _context4.next = 15;\n          return put(ColorActions.onGetList());\n\n        case 15:\n          _context4.next = 22;\n          break;\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log(_context4.t0);\n          _context4.next = 22;\n          return put(ColorActions.onUpdateError(_context4.t0));\n\n        case 22:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 17]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref5) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref5.id;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(deleteOperation, id);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(ColorActions.onDeleteSuccess(data));\n\n        case 10:\n          _context5.next = 12;\n          return put(ColorActions.onGetList());\n\n        case 12:\n          _context5.next = 18;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 18;\n          return put(ColorActions.onDeleteError(_context5.t0));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 14]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(OperationActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n/*\nexport function* watchCreate() {\n  yield takeEvery(ProductsActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(ProductsActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(ProductsActionTypes.DELETE, handleDelete);\n} */\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchGetList)\n          /* fork(watchGetDetail),\n          fork(watchCreate),\n          fork(watchUpdate),\n          fork(watchDelete), */\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/operations.js"],"names":["handleGetList","handleGetDetail","handleCreate","handleUpdate","handleDelete","watchGetList","rootSaga","takeEvery","fork","all","call","put","get","OperationActions","OperationActionTypes","getAllOperations","getDetailOperation","addOperation","updateOperation","deleteOperation","payload","result","data","onGetListSuccess","operations","onGetListError","filters","id","code","ColorActions","onGetDetailSuccess","category","onGetDetailError","params","onCreateSuccess","onGetList","onCreateError","detailResult","onUpdateSuccess","console","log","onUpdateError","onDeleteSuccess","onDeleteError","GET_LIST"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport OperationActions, { OperationActionTypes } from \"../actions/operations\";\nimport { getAllOperations, getDetailOperation, addOperation, updateOperation, deleteOperation } from \"../apis/operations\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllOperations, payload);\n    const data = get(result, \"data\");\n    yield put(OperationActions.onGetListSuccess(data.operations));\n  } catch (error) {\n    yield put(OperationActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailOperation, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(ColorActions.onGetDetailSuccess(data.category));\n  } catch (error) {\n    yield put(ColorActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  try {\n    const result = yield call(addOperation, payload.params);\n    const data = get(result, \"data\", {});\n    if (data.code !== 201) throw data;\n    yield put(ColorActions.onCreateSuccess(data.category));\n    yield put(ColorActions.onGetList());\n  } catch (error) {\n    yield put(ColorActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\nfunction* handleUpdate({ payload }) {\n  try {\n    const result = yield call(updateOperation, payload.params, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    const detailResult = yield call(getDetailOperation, payload.id);\n    yield put(ColorActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(ColorActions.onGetList());\n  } catch (error) {\n    console.log(error);\n    yield put(ColorActions.onUpdateError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id }) {\n  try {\n    const result = yield call(deleteOperation, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(ColorActions.onDeleteSuccess(data));\n    yield put(ColorActions.onGetList());\n  } catch (error) {\n    yield put(ColorActions.onDeleteError(error));\n  }\n}\n\nexport function* watchGetList() {\n  yield takeEvery(OperationActionTypes.GET_LIST, handleGetList);\n}\n\n/*\nexport function* watchCreate() {\n  yield takeEvery(ProductsActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(ProductsActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(ProductsActionTypes.DELETE, handleDelete);\n} */\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    /* fork(watchGetDetail),\n    fork(watchCreate),\n    fork(watchUpdate),\n    fork(watchDelete), */\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}