{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdateAll),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleDeleteAll),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport NotificationActions, { NotificationActionTypes } from \"../actions/notification\";\nimport { getAllNotifications, addNotification, updateNotification, deleteNotification, updateAllNotifications, deleteAllNotifications } from \"../apis/notification\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllNotifications, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context.next = 10;\n          return put(NotificationActions.onGetListSuccess(data.notifications));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 16;\n          return put(NotificationActions.onGetListError(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n/**\n *\n * create\n */\n\n\nfunction handleCreate(_ref2) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(addNotification, payload.data);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 201)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context2.next = 10;\n          return put(NotificationActions.onCreateSuccess(data.notification));\n\n        case 10:\n          _context2.next = 16;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 16;\n          return put(NotificationActions.onCreateError(_context2.t0));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 12]]);\n}\n/**\n *\n * update\n */\n\n\nfunction handleUpdate(_ref3) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(updateNotification, payload.data, payload.id);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context3.next = 10;\n          return put(NotificationActions.onUpdateSuccess(data));\n\n        case 10:\n          _context3.next = 12;\n          return put(NotificationActions.onGetList());\n\n        case 12:\n          _context3.next = 18;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 18;\n          return put(NotificationActions.onUpdateError(_context3.t0));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 14]]);\n}\n\nfunction handleUpdateAll(_ref4) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleUpdateAll$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(updateAllNotifications, payload.data);\n\n        case 4:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context4.next = 10;\n          return put(NotificationActions.onUpdateAllSuccess(data));\n\n        case 10:\n          _context4.next = 12;\n          return put(NotificationActions.onGetList());\n\n        case 12:\n          _context4.next = 18;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 18;\n          return put(NotificationActions.onUpdateAllError(_context4.t0));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 14]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref5) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(deleteNotification, payload.id);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(NotificationActions.onDeleteSuccess(data));\n\n        case 10:\n          _context5.next = 12;\n          return put(NotificationActions.onGetList());\n\n        case 12:\n          _context5.next = 18;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 18;\n          return put(NotificationActions.onDeleteError(_context5.t0));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 14]]);\n}\n\nfunction handleDeleteAll(_ref6) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleDeleteAll$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(deleteAllNotifications, payload.id);\n\n        case 4:\n          result = _context6.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context6.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context6.next = 10;\n          return put(NotificationActions.onDeleteAllSuccess(data));\n\n        case 10:\n          _context6.next = 12;\n          return put(NotificationActions.onGetList());\n\n        case 12:\n          _context6.next = 18;\n          break;\n\n        case 14:\n          _context6.prev = 14;\n          _context6.t0 = _context6[\"catch\"](1);\n          _context6.next = 18;\n          return put(NotificationActions.onDeleteAllError(_context6.t0));\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 14]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(NotificationActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n/* export function* watchCreate() {\n  yield takeEvery(NotificationActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(NotificationActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(NotificationActionTypes.DELETE, handleDelete);\n}\nexport function* watchUpdateAll() {\n  yield takeEvery(NotificationActionTypes.UPDATE_ALL, handleUpdateAll);\n}\nexport function* watchDeleteAll() {\n  yield takeEvery(NotificationActionTypes.DELETE_ALL, handleDeleteAll);\n}*/\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return all([fork(watchGetList)\n          /*     fork(watchCreate),\n              fork(watchUpdate),\n              fork(watchDelete),\n              fork(watchUpdateAll),\n              fork(watchDeleteAll), */\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/notification.js"],"names":["handleGetList","handleCreate","handleUpdate","handleUpdateAll","handleDelete","handleDeleteAll","watchGetList","rootSaga","takeEvery","fork","all","call","put","get","NotificationActions","NotificationActionTypes","getAllNotifications","addNotification","updateNotification","deleteNotification","updateAllNotifications","deleteAllNotifications","payload","result","data","code","onGetListSuccess","notifications","onGetListError","onCreateSuccess","notification","onCreateError","id","onUpdateSuccess","onGetList","onUpdateError","onUpdateAllSuccess","onUpdateAllError","onDeleteSuccess","onDeleteError","onDeleteAllSuccess","onDeleteAllError","GET_LIST"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport NotificationActions, { NotificationActionTypes } from \"../actions/notification\";\nimport { getAllNotifications, addNotification, updateNotification, deleteNotification, updateAllNotifications, deleteAllNotifications } from \"../apis/notification\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllNotifications, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onGetListSuccess(data.notifications));\n  } catch (error) {\n    yield put(NotificationActions.onGetListError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  try {\n    const result = yield call(addNotification, payload.data);\n    const data = get(result, \"data\", {});\n    if (data.code !== 201) throw data;\n    yield put(NotificationActions.onCreateSuccess(data.notification));\n  } catch (error) {\n    yield put(NotificationActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\nfunction* handleUpdate({ payload }) {\n  try {\n    const result = yield call(updateNotification, payload.data, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onUpdateSuccess(data));\n    yield put(NotificationActions.onGetList());\n  } catch (error) {\n    yield put(NotificationActions.onUpdateError(error));\n  }\n}\n\nfunction* handleUpdateAll({ payload }) {\n  try {\n    const result = yield call(updateAllNotifications, payload.data);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onUpdateAllSuccess(data));\n    yield put(NotificationActions.onGetList());\n  } catch (error) {\n    yield put(NotificationActions.onUpdateAllError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ payload }) {\n  try {\n    const result = yield call(deleteNotification, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onDeleteSuccess(data));\n    yield put(NotificationActions.onGetList());\n  } catch (error) {\n    yield put(NotificationActions.onDeleteError(error));\n  }\n}\n\nfunction* handleDeleteAll({ payload }) {\n  try {\n    const result = yield call(deleteAllNotifications, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(NotificationActions.onDeleteAllSuccess(data));\n    yield put(NotificationActions.onGetList());\n  } catch (error) {\n    yield put(NotificationActions.onDeleteAllError(error));\n  }\n}\n\nexport function* watchGetList() {\n  yield takeEvery(NotificationActionTypes.GET_LIST, handleGetList);\n}\n/* export function* watchCreate() {\n  yield takeEvery(NotificationActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(NotificationActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(NotificationActionTypes.DELETE, handleDelete);\n}\nexport function* watchUpdateAll() {\n  yield takeEvery(NotificationActionTypes.UPDATE_ALL, handleUpdateAll);\n}\nexport function* watchDeleteAll() {\n  yield takeEvery(NotificationActionTypes.DELETE_ALL, handleDeleteAll);\n}*/\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n/*     fork(watchCreate),\n    fork(watchUpdate),\n    fork(watchDelete),\n    fork(watchUpdateAll),\n    fork(watchDeleteAll), */\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}