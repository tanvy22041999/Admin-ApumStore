{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport DisplayActions, { DisplayActionTypes } from \"../actions/display\";\nimport { getAllDisplays } from \"../apis/products\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllCategories, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 8;\n          return put(DisplayActions.onGetListSuccess(data.displays));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(DisplayActions.onGetListError(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(DisplayActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n/*\nexport function* watchCreate() {\n  yield takeEvery(ProductsActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(ProductsActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(ProductsActionTypes.DELETE, handleDelete);\n} */\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchGetList)\n          /* fork(watchGetDetail),\n          fork(watchCreate),\n          fork(watchUpdate),\n          fork(watchDelete), */\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/display.js"],"names":["handleGetList","watchGetList","rootSaga","takeEvery","fork","all","call","put","get","DisplayActions","DisplayActionTypes","getAllDisplays","payload","getAllCategories","result","data","onGetListSuccess","displays","onGetListError","GET_LIST"],"mappings":";;oDAKUA,a;qDASOC,Y;qDAeQC,Q;;AA7BzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,cAAP,IAAyBC,kBAAzB,QAAmD,oBAAnD;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAAUX,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0BY,UAAAA,OAA1B,QAA0BA,OAA1B;AAAA;AAAA;AAEmB,iBAAMN,IAAI,CAACO,gBAAD,EAAmBD,OAAnB,CAAV;;AAFnB;AAEUE,UAAAA,MAFV;AAGUC,UAAAA,IAHV,GAGiBP,GAAG,CAACM,MAAD,EAAS,MAAT,CAHpB;AAAA;AAII,iBAAMP,GAAG,CAACE,cAAc,CAACO,gBAAf,CAAgCD,IAAI,CAACE,QAArC,CAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMI,iBAAMV,GAAG,CAACE,cAAc,CAACS,cAAf,aAAD,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,OAAO,SAAUjB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CAACO,kBAAkB,CAACS,QAApB,EAA8BnB,aAA9B,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP;;;;;;;;;;;AAWA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRD,IAAI,CAACH,YAAD;AACJ;;;;AAFQ,WAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport DisplayActions, { DisplayActionTypes } from \"../actions/display\";\nimport { getAllDisplays } from \"../apis/products\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    yield put(DisplayActions.onGetListSuccess(data.displays));\n  } catch (error) {\n    yield put(DisplayActions.onGetListError(error));\n  }\n}\nexport function* watchGetList() {\n  yield takeEvery(DisplayActionTypes.GET_LIST, handleGetList);\n}\n\n/*\nexport function* watchCreate() {\n  yield takeEvery(ProductsActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(ProductsActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(ProductsActionTypes.DELETE, handleDelete);\n} */\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    /* fork(watchGetDetail),\n    fork(watchCreate),\n    fork(watchUpdate),\n    fork(watchDelete), */\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}