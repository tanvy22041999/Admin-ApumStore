{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\views\\\\charts\\\\MainChartExample.js\";\n\nimport React from 'react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils/src'; //const brandSuccess = getStyle('success') || '#4dbd74'\n\nvar brandInfo = getStyle('info') || '#20a8d8'; //const brandDanger = getStyle('danger') || '#f86c6b'\n\nvar MainChartExample = function MainChartExample(_ref) {\n  var styles = _ref.styles,\n      data = _ref.data;\n  console.log(styles);\n\n  var random = function random(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  var defaultDatasets = function () {\n    var elements = 12;\n    var data1 = [];\n\n    for (var i = 0; i <= elements; i++) {\n      data1.push(random(50, 200));\n    }\n\n    return [{\n      label: 'My First dataset',\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data1\n    }\n    /* {\n      label: 'My Second dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandSuccess,\n      pointHoverBackgroundColor: brandSuccess,\n      borderWidth: 2,\n      data: data2\n    },\n    {\n      label: 'My Third dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandDanger,\n      pointHoverBackgroundColor: brandDanger,\n      borderWidth: 1,\n      borderDash: [8, 5],\n      data: data3\n    } */\n    ];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 250\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default MainChartExample;","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/views/charts/MainChartExample.js"],"names":["React","CChartLine","getStyle","hexToRgba","brandInfo","MainChartExample","styles","data","console","log","random","min","max","Math","floor","defaultDatasets","elements","data1","i","push","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","point","radius","hitRadius","hoverRadius","hoverBorderWidth","attributes"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils/src'\n\n//const brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\n//const brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = ({styles, data}) => {\n  console.log(styles)\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 12\n    const data1 = []\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      /* {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      } */\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n"]},"metadata":{},"sourceType":"module"}