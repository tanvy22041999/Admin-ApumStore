{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleLogin),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetProfile),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetProfile),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport AuthorizationActions, { AuthorizationActionTypes } from \"../actions/auth\";\nimport { loginAccount, getProfile } from \"../apis/auth\";\n/**\n *\n * login\n */\n\nfunction handleLogin(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(loginAccount, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          if (!(data.user.role === \"1\")) {\n            _context.next = 10;\n            break;\n          }\n\n          throw \"Tài khoản không hợp lệ\";\n\n        case 10:\n          localStorage.setItem('AUTH_USER', result.headers.authorization);\n          _context.next = 13;\n          return put(AuthorizationActions.onLoginSuccess(data.user));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 19;\n          return put(AuthorizationActions.onLoginError(_context.t0));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 15]]);\n}\n\nfunction handleGetProfile() {\n  var result, data;\n  return _regeneratorRuntime.wrap(function handleGetProfile$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(getProfile, null);\n\n        case 3:\n          result = _context2.sent;\n          data = get(result, \"data.user\", {});\n          _context2.next = 7;\n          return put(AuthorizationActions.onGetProfileSuccess(data));\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 13;\n          return put(AuthorizationActions.onGetProfileError(_context2.t0));\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\n/**\n *\n */\n\n\nexport function watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(AuthorizationActionTypes.LOGIN, handleLogin);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function watchGetProfile() {\n  return _regeneratorRuntime.wrap(function watchGetProfile$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(AuthorizationActionTypes.GET_PROFILE, handleGetProfile);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchGetProfile)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/auth.js"],"names":["handleLogin","handleGetProfile","watchLogin","watchGetProfile","rootSaga","takeEvery","fork","all","call","put","get","AuthorizationActions","AuthorizationActionTypes","loginAccount","getProfile","payload","result","data","code","user","role","localStorage","setItem","headers","authorization","onLoginSuccess","onLoginError","onGetProfileSuccess","onGetProfileError","LOGIN","GET_PROFILE"],"mappings":";;oDAUUA,W;qDAaAC,gB;qDAmBOC,U;qDAGAC,e;qDAIQC,Q;;AAjDzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,oBAAP,IAA+BC,wBAA/B,QAA+D,iBAA/D;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,cAAzC;AAEA;;;;;AAKA,SAAUd,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBe,UAAAA,OAAxB,QAAwBA,OAAxB;AAAA;AAAA;AAEmB,iBAAMP,IAAI,CAACK,YAAD,EAAeE,OAAf,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAGUC,UAAAA,IAHV,GAGiBP,GAAG,CAACM,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAHpB;;AAAA,gBAIQC,IAAI,CAACC,IAAL,KAAc,GAJtB;AAAA;AAAA;AAAA;;AAAA,gBAIiCD,IAJjC;;AAAA;AAAA,gBAKQA,IAAI,CAACE,IAAL,CAAUC,IAAV,KAAiB,GALzB;AAAA;AAAA;AAAA;;AAAA,gBAKoC,wBALpC;;AAAA;AAMIC,UAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,MAAM,CAACO,OAAP,CAAeC,aAAjD;AANJ;AAOI,iBAAMf,GAAG,CAACE,oBAAoB,CAACc,cAArB,CAAoCR,IAAI,CAACE,IAAzC,CAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMV,GAAG,CAACE,oBAAoB,CAACe,YAArB,aAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUzB,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMO,IAAI,CAACM,UAAD,EAAa,IAAb,CAAV;;AAHnB;AAGUE,UAAAA,MAHV;AAIUC,UAAAA,IAJV,GAIiBP,GAAG,CAACM,MAAD,EAAS,WAAT,EAAsB,EAAtB,CAJpB;AAAA;AAKI,iBAAMP,GAAG,CAACE,oBAAoB,CAACgB,mBAArB,CAAyCV,IAAzC,CAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWI,iBAAMR,GAAG,CAACE,oBAAoB,CAACiB,iBAArB,cAAD,CAAT;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;;AAIA,OAAO,SAAU1B,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACO,wBAAwB,CAACiB,KAA1B,EAAiC7B,WAAjC,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUG,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CAACO,wBAAwB,CAACkB,WAA1B,EAAuC7B,gBAAvC,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRD,IAAI,CAACJ,UAAD,CADI,EAERI,IAAI,CAACH,eAAD,CAFI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport AuthorizationActions, { AuthorizationActionTypes } from \"../actions/auth\";\nimport { loginAccount, getProfile } from \"../apis/auth\";\n\n/**\n *\n * login\n */\n\nfunction* handleLogin({ payload }) {\n  try {\n    const result = yield call(loginAccount, payload);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    if (data.user.role===\"1\") throw \"Tài khoản không hợp lệ\"\n    localStorage.setItem('AUTH_USER', result.headers.authorization);\n    yield put(AuthorizationActions.onLoginSuccess(data.user));\n  } catch (error) {\n    yield put(AuthorizationActions.onLoginError(error));\n  }\n}\n\nfunction* handleGetProfile() {\n  try {\n    //1. Get profile\n    const result = yield call(getProfile, null);\n    const data = get(result, \"data.user\", {});\n    yield put(AuthorizationActions.onGetProfileSuccess(data));\n    //2. Get user info details\n    //3. Get order history\n/*     const orderData = yield call(orderHistory, data._id);\n    yield put(OrdersActions.onGetHistoryOrderSuccess(orderData.data.orders));*/\n  } catch (error) {\n    yield put(AuthorizationActions.onGetProfileError(error));\n  }\n}\n\n/**\n *\n */\n\nexport function* watchLogin() {\n  yield takeEvery(AuthorizationActionTypes.LOGIN, handleLogin);\n}\nexport function* watchGetProfile() {\n  yield takeEvery(AuthorizationActionTypes.GET_PROFILE, handleGetProfile);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLogin),\n    fork(watchGetProfile),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}