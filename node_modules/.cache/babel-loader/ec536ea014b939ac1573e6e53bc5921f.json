{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\containers\\\\TheHeaderDropdownNotif.js\";\nimport React, { Component } from 'react';\nimport { CBadge, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from '@coreui/react';\nimport { connect } from 'react-redux';\nimport { compose } from \"redux\";\nimport CIcon from '@coreui/icons-react';\nimport io from 'socket.io-client';\nimport { toastInfo } from '../utils/toastHelper';\nimport { Link } from 'react-router-dom'; // @Actions\n\nimport NotificationActions from '../redux/actions/notification'; // @Functions\n\nimport { INITIAL_IMAGE } from '../constants';\nvar ENDPOINT = 'http://localhost:3000';\nvar socket = io(ENDPOINT);\n\nvar TheHeaderDropdownNotif = /*#__PURE__*/function (_Component) {\n  _inherits(TheHeaderDropdownNotif, _Component);\n\n  var _super = _createSuper(TheHeaderDropdownNotif);\n\n  function TheHeaderDropdownNotif(props) {\n    var _this;\n\n    _classCallCheck(this, TheHeaderDropdownNotif);\n\n    _this = _super.call(this, props);\n\n    _this.onReadAllNotification = function () {\n      var _this$props = _this.props,\n          onUpdateAllNotifications = _this$props.onUpdateAllNotifications,\n          userInfo = _this$props.userInfo;\n      var itemsCount = _this.state.itemsCount;\n\n      if (itemsCount > 0) {\n        onUpdateAllNotifications({\n          admin: userInfo._id\n        });\n\n        _this.setState({\n          itemsCount: 0\n        });\n      }\n    };\n\n    _this.setLink = function (type) {\n      switch (type) {\n        case 0:\n          return \"/users/order-manage\";\n\n        case 2:\n          return \"/users/installment-manage\";\n\n        default:\n          return \"/notification\";\n      }\n    };\n\n    _this.state = {\n      itemsCount: 0,\n      email: \"\",\n      type: -1 // type: 0 (order), type: 2 (installment)\n\n    };\n    return _this;\n  }\n\n  _createClass(TheHeaderDropdownNotif, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          itemsCount = _this$state.itemsCount,\n          email = _this$state.email,\n          type = _this$state.type;\n      var _this$props2 = this.props,\n          onGetAllNotifications = _this$props2.onGetAllNotifications,\n          totalNotification = _this$props2.totalNotification,\n          userInfo = _this$props2.userInfo;\n\n      if (userInfo !== prevProps.userInfo && userInfo) {\n        var admin = userInfo._id;\n        onGetAllNotifications({\n          admin: admin,\n          limit: 5,\n          page: 0,\n          active: 1\n        });\n      }\n\n      if (totalNotification !== prevProps.totalNotification && totalNotification) {\n        this.setState({\n          itemsCount: totalNotification\n        });\n      }\n\n      socket.on('newOrder', function (res) {\n        _this2.setState({\n          itemsCount: itemsCount + res.newOrders,\n          email: res.email,\n          type: 0\n        });\n      });\n      socket.on('newInstallment', function (res) {\n        _this2.setState({\n          itemsCount: itemsCount + res.newInstallments,\n          email: res.email,\n          type: 2\n        });\n      });\n\n      if (itemsCount !== prevState.itemsCount && itemsCount > totalNotification && type !== -1) {\n        if (type === 0) toastInfo(\"\".concat(email, \" v\\u1EEBa x\\xE1c th\\u1EF1c \\u0111\\u01A1n h\\xE0ng\"));else toastInfo(\"\".concat(email, \" v\\u1EEBa g\\u1EEDi y\\xEAu c\\u1EA7u tr\\u1EA3 g\\xF3p\"));\n        var admin = userInfo._id;\n        onGetAllNotifications({\n          admin: admin,\n          limit: 5,\n          page: 0,\n          active: 1\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var itemsCount = this.state.itemsCount;\n      var listNotification = this.props.listNotification;\n      return /*#__PURE__*/React.createElement(CDropdown, {\n        inNav: true,\n        className: \"c-header-nav-item mx-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n        className: \"c-header-nav-link\",\n        caret: false,\n        onClick: function onClick() {\n          return _this3.onReadAllNotification();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-bell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }), itemsCount > 0 && /*#__PURE__*/React.createElement(CBadge, {\n        shape: \"pill\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 30\n        }\n      }, itemsCount)), /*#__PURE__*/React.createElement(CDropdownMenu, {\n        placement: \"bottom-end\",\n        className: \"pt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, listNotification ? listNotification.map(function (notification, index) {\n        return /*#__PURE__*/React.createElement(CDropdownItem, {\n          key: index,\n          className: \"d-block dropdown-normal\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: _this3.setLink(notification.type),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"w-100 rounded-circle\",\n          src: notification.image ? notification.image.public_url : INITIAL_IMAGE,\n          alt: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-9\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-basket\",\n          className: \"mr-2 text-success\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold mb-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }\n        }, notification.name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }\n        }, notification.content), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0 text-secondary\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }\n        }, new Date(notification.createdAt).toLocaleDateString(\"vi-VN\"))))));\n      }) : /*#__PURE__*/React.createElement(CDropdownItem, {\n        className: \"d-block dropdown-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, \"Ch\\u01B0a c\\xF3 th\\xF4ng b\\xE1o n\\xE0o\"))))));\n    }\n  }]);\n\n  return TheHeaderDropdownNotif;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listNotification: state.notification.detail,\n    totalNotification: state.notification._total,\n    userInfo: state.auth.detail,\n    isLogin: state.auth.loggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetAllNotifications: function onGetAllNotifications(data) {\n      dispatch(NotificationActions.onGetNewest(data));\n    },\n    onUpdateAllNotifications: function onUpdateAllNotifications(data) {\n      dispatch(NotificationActions.onUpdateAll(data));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(TheHeaderDropdownNotif);","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/containers/TheHeaderDropdownNotif.js"],"names":["React","Component","CBadge","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","connect","compose","CIcon","io","toastInfo","Link","NotificationActions","INITIAL_IMAGE","ENDPOINT","socket","TheHeaderDropdownNotif","props","onReadAllNotification","onUpdateAllNotifications","userInfo","itemsCount","state","admin","_id","setState","setLink","type","email","prevProps","prevState","onGetAllNotifications","totalNotification","limit","page","active","on","res","newOrders","newInstallments","listNotification","map","notification","index","image","public_url","name","content","Date","createdAt","toLocaleDateString","mapStateToProps","detail","_total","auth","isLogin","loggedIn","mapDispatchToProps","dispatch","data","onGetNewest","onUpdateAll","withConnect"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle\n} from '@coreui/react'\nimport { connect } from 'react-redux';\nimport { compose } from \"redux\";\nimport CIcon from '@coreui/icons-react'\nimport io from 'socket.io-client';\nimport { toastInfo } from '../utils/toastHelper';\nimport { Link } from 'react-router-dom'\n// @Actions\nimport NotificationActions from '../redux/actions/notification'\n// @Functions\nimport {INITIAL_IMAGE} from '../constants';\n\nconst ENDPOINT = 'http://localhost:3000';\nlet socket = io(ENDPOINT);\n\nclass TheHeaderDropdownNotif extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      itemsCount : 0,\n      email: \"\",\n      type: -1  // type: 0 (order), type: 2 (installment)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const { itemsCount, email, type } = this.state;\n    const { onGetAllNotifications, totalNotification, userInfo } = this.props\n    if (userInfo !== prevProps.userInfo && userInfo) {\n      var admin = userInfo._id;\n      onGetAllNotifications({admin, limit: 5, page: 0, active: 1})\n    }\n    if (totalNotification !== prevProps.totalNotification && totalNotification) {\n      this.setState({itemsCount: totalNotification})\n    }\n    socket.on('newOrder', res => {\n      this.setState({itemsCount: itemsCount + res.newOrders, email: res.email, type: 0});\n    });\n    socket.on('newInstallment', res => {\n      this.setState({itemsCount: itemsCount + res.newInstallments, email: res.email, type: 2});\n    });\n    if (itemsCount !== prevState.itemsCount && itemsCount > totalNotification && type !== -1) {\n      if(type === 0) toastInfo(`${email} vừa xác thực đơn hàng`)\n      else toastInfo(`${email} vừa gửi yêu cầu trả góp`)\n      var admin = userInfo._id;\n      onGetAllNotifications({admin, limit: 5, page: 0, active: 1})\n    }\n  }\n\n  onReadAllNotification = () =>{\n    const { onUpdateAllNotifications, userInfo } = this.props;\n    const {itemsCount} = this.state;\n    if(itemsCount > 0){\n      onUpdateAllNotifications({admin: userInfo._id})\n      this.setState({itemsCount : 0})\n    }\n  }\n\n  setLink = (type) => {\n    switch(type){\n      case 0:\n        return \"/users/order-manage\"\n      case 2:\n        return \"/users/installment-manage\"\n      default:\n        return \"/notification\"\n    }\n  }\n\n  render(){\n    const {itemsCount} = this.state;\n    const {listNotification} = this.props;\n    return (\n      <CDropdown\n        inNav\n        className=\"c-header-nav-item mx-2\"\n      >\n        <CDropdownToggle className=\"c-header-nav-link\" caret={false} onClick={()=>this.onReadAllNotification()}>\n          <CIcon name=\"cil-bell\"/>\n          {itemsCount > 0 && <CBadge shape=\"pill\" color=\"danger\">{itemsCount}</CBadge>}\n        </CDropdownToggle>\n        <CDropdownMenu  placement=\"bottom-end\" className=\"pt-0\">\n          {listNotification\n          ? listNotification.map((notification, index)=>{\n            return(\n            <CDropdownItem key={index} className=\"d-block dropdown-normal\">\n              <Link to={this.setLink(notification.type)}>\n              <div className=\"row\">\n                <div className=\"col-3\">\n                  <img className=\"w-100 rounded-circle\" src={notification.image ? notification.image.public_url : INITIAL_IMAGE} alt={index}></img>\n                </div>\n                <div className=\"col-9\">\n                  <CIcon name=\"cil-basket\" className=\"mr-2 text-success\" />\n                  <span className=\"font-weight-bold mb-0\">{notification.name}</span>\n                  <p className=\"mb-0\">{notification.content}</p>\n                  <p className=\"mb-0 text-secondary\">{new Date(notification.createdAt).toLocaleDateString(\"vi-VN\")}</p>\n                </div>\n              </div>\n              </Link>\n            </CDropdownItem>\n            )\n          })\n          : <CDropdownItem className=\"d-block dropdown-normal\">\n          <div className=\"row\">\n            <div className=\"col-12 text-center\">\n              <p>Chưa có thông báo nào</p>\n            </div>\n          </div>\n        </CDropdownItem>}\n        </CDropdownMenu>\n      </CDropdown>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    listNotification: state.notification.detail,\n    totalNotification: state.notification._total,\n    userInfo: state.auth.detail,\n    isLogin: state.auth.loggedIn,\n  }\n}\n\nconst mapDispatchToProps =(dispatch)=> {\n\treturn {\n\t\tonGetAllNotifications : (data) =>{\n\t\t\tdispatch(NotificationActions.onGetNewest(data))\n    },\n    onUpdateAllNotifications : (data) =>{\n\t\t\tdispatch(NotificationActions.onUpdateAll(data))\n    },\n\t}\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)\nexport default compose(\n  withConnect\n)(TheHeaderDropdownNotif)\n"]},"metadata":{},"sourceType":"module"}