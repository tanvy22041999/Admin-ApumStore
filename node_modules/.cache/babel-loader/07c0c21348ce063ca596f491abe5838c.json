{"ast":null,"code":"export var ReviewActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n  DELETE: \"DELETE\",\n  DELETE_SUCCESS: \"DELETE_SUCCESS\",\n  DELETE_ERROR: \"DELETE_ERROR\",\n  CLEAR_STATE: \"CLEAR_STATE\"\n};\nObject.keys(ReviewActionTypes).forEach(function (key) {\n  ReviewActionTypes[key] = \"REVIEW_\".concat(ReviewActionTypes[key]);\n});\n\nvar onClearState = function onClearState() {\n  return {\n    type: ReviewActionTypes.CLEAR_STATE\n  };\n}; //----------------  Get list  ----------------------\n\n\nvar onGetList = function onGetList(payload) {\n  return {\n    type: ReviewActionTypes.GET_LIST,\n    payload: payload\n  };\n};\n\nvar onGetListSuccess = function onGetListSuccess(payload) {\n  return {\n    type: ReviewActionTypes.GET_LIST_SUCCESS,\n    payload: payload\n  };\n};\n\nvar onGetListError = function onGetListError(error) {\n  return {\n    type: ReviewActionTypes.GET_LIST_ERROR,\n    payload: error\n  };\n}; //----------------  Delete ----------------------\n\n\nvar onDelete = function onDelete(_ref) {\n  var id = _ref.id;\n  return {\n    type: ReviewActionTypes.DELETE,\n    id: id\n  };\n};\n\nvar onDeleteSuccess = function onDeleteSuccess(detail) {\n  return {\n    type: ReviewActionTypes.DELETE_SUCCESS,\n    payload: detail\n  };\n};\n\nvar onDeleteError = function onDeleteError(error) {\n  return {\n    type: ReviewActionTypes.DELETE_ERROR,\n    payload: error\n  };\n};\n\nvar ReviewActions = {\n  onGetList: onGetList,\n  onGetListSuccess: onGetListSuccess,\n  onGetListError: onGetListError,\n  onClearState: onClearState,\n  onDelete: onDelete,\n  onDeleteSuccess: onDeleteSuccess,\n  onDeleteError: onDeleteError\n};\nexport default ReviewActions;","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/actions/review.js"],"names":["ReviewActionTypes","GET_LIST","GET_LIST_SUCCESS","GET_LIST_ERROR","DELETE","DELETE_SUCCESS","DELETE_ERROR","CLEAR_STATE","Object","keys","forEach","key","onClearState","type","onGetList","payload","onGetListSuccess","onGetListError","error","onDelete","id","onDeleteSuccess","detail","onDeleteError","ReviewActions"],"mappings":"AAAA,OAAO,IAAMA,iBAAiB,GAAG;AAC/BC,EAAAA,QAAQ,EAAE,UADqB;AAE/BC,EAAAA,gBAAgB,EAAE,kBAFa;AAG/BC,EAAAA,cAAc,EAAE,gBAHe;AAK/BC,EAAAA,MAAM,EAAE,QALuB;AAM/BC,EAAAA,cAAc,EAAE,gBANe;AAO/BC,EAAAA,YAAY,EAAE,cAPiB;AAS/BC,EAAAA,WAAW,EAAE;AATkB,CAA1B;AAYPC,MAAM,CAACC,IAAP,CAAYT,iBAAZ,EAA+BU,OAA/B,CAAuC,UAACC,GAAD,EAAS;AAC9CX,EAAAA,iBAAiB,CACfW,GADe,CAAjB,oBAEcX,iBAAiB,CAACW,GAAD,CAF/B;AAGD,CAJD;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AAC1BC,IAAAA,IAAI,EAAEb,iBAAiB,CAACO;AADE,GAAP;AAAA,CAArB,C,CAKA;;;AAEA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD;AAAA,SAAc;AAC9BF,IAAAA,IAAI,EAAEb,iBAAiB,CAACC,QADM;AAE9Bc,IAAAA,OAAO,EAAPA;AAF8B,GAAd;AAAA,CAAlB;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,OAAD;AAAA,SAAc;AACrCF,IAAAA,IAAI,EAAEb,iBAAiB,CAACE,gBADa;AAErCa,IAAAA,OAAO,EAAPA;AAFqC,GAAd;AAAA,CAAzB;;AAKA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SAAY;AACjCL,IAAAA,IAAI,EAAEb,iBAAiB,CAACG,cADS;AAEjCY,IAAAA,OAAO,EAAEG;AAFwB,GAAZ;AAAA,CAAvB,C,CAKA;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,SAAa;AAC5BP,IAAAA,IAAI,EAAEb,iBAAiB,CAACI,MADI;AAE5BgB,IAAAA,EAAE,EAAFA;AAF4B,GAAb;AAAA,CAAjB;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD;AAAA,SAAa;AACnCT,IAAAA,IAAI,EAAEb,iBAAiB,CAACK,cADW;AAEnCU,IAAAA,OAAO,EAAEO;AAF0B,GAAb;AAAA,CAAxB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACL,KAAD;AAAA,SAAY;AAChCL,IAAAA,IAAI,EAAEb,iBAAiB,CAACM,YADQ;AAEhCS,IAAAA,OAAO,EAAEG;AAFuB,GAAZ;AAAA,CAAtB;;AAKA,IAAMM,aAAa,GAAG;AACpBV,EAAAA,SAAS,EAATA,SADoB;AAEpBE,EAAAA,gBAAgB,EAAhBA,gBAFoB;AAGpBC,EAAAA,cAAc,EAAdA,cAHoB;AAKpBL,EAAAA,YAAY,EAAZA,YALoB;AAOpBO,EAAAA,QAAQ,EAARA,QAPoB;AAQpBE,EAAAA,eAAe,EAAfA,eARoB;AASpBE,EAAAA,aAAa,EAAbA;AAToB,CAAtB;AAYA,eAAeC,aAAf","sourcesContent":["export const ReviewActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n\n  DELETE: \"DELETE\",\n  DELETE_SUCCESS: \"DELETE_SUCCESS\",\n  DELETE_ERROR: \"DELETE_ERROR\",\n\n  CLEAR_STATE: \"CLEAR_STATE\",\n}\n\nObject.keys(ReviewActionTypes).forEach((key) => {\n  ReviewActionTypes[\n    key\n  ] = `REVIEW_${ReviewActionTypes[key]}`;\n});\n\nconst onClearState = () => ({\n  type: ReviewActionTypes.CLEAR_STATE,\n});\n\n\n//----------------  Get list  ----------------------\n\nconst onGetList = (payload) => ({\n  type: ReviewActionTypes.GET_LIST,\n  payload,\n});\n\nconst onGetListSuccess = (payload) => ({\n  type: ReviewActionTypes.GET_LIST_SUCCESS,\n  payload,\n});\n\nconst onGetListError = (error) => ({\n  type: ReviewActionTypes.GET_LIST_ERROR,\n  payload: error,\n});\n\n//----------------  Delete ----------------------\n\nconst onDelete = ({ id }) => ({\n  type: ReviewActionTypes.DELETE,\n  id,\n});\n\nconst onDeleteSuccess = (detail) => ({\n  type: ReviewActionTypes.DELETE_SUCCESS,\n  payload: detail,\n});\n\nconst onDeleteError = (error) => ({\n  type: ReviewActionTypes.DELETE_ERROR,\n  payload: error,\n});\n\nconst ReviewActions = {\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n\n  onClearState,\n\n  onDelete,\n  onDeleteSuccess,\n  onDeleteError,\n};\n\nexport default ReviewActions;\n"]},"metadata":{},"sourceType":"module"}