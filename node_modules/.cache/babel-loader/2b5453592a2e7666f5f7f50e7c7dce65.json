{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put, delay } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport SelectorActions, { SelectorActionTypes } from \"../actions/selector\";\nimport { addSelector, deleteSelector } from \"../apis/selector\";\n/**\n *\n * create\n */\n\nfunction handleCreate(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(addSelector, payload.params);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 201)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context.next = 10;\n          return put(SelectorActions.onCreateSuccess(data.selector));\n\n        case 10:\n          _context.next = 12;\n          return put(SelectorActions.onGetList());\n\n        case 12:\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 18;\n          return put(SelectorActions.onCreateError(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref2) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(deleteSelector, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context2.next = 10;\n          return put(SelectorActions.onDeleteSuccess(data));\n\n        case 10:\n          _context2.next = 12;\n          return put(SelectorActions.onGetList());\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(SelectorActions.onDeleteError(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 14]]);\n}\n\nexport function watchCreate() {\n  return _regeneratorRuntime.wrap(function watchCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(SelectorActionTypes.CREATE, handleCreate);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SelectorActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchCreate), fork(watchDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/selector.js"],"names":["handleCreate","handleDelete","watchCreate","watchDelete","rootSaga","takeEvery","fork","all","call","put","delay","get","SelectorActions","SelectorActionTypes","addSelector","deleteSelector","payload","params","result","data","code","onCreateSuccess","selector","onGetList","onCreateError","id","onDeleteSuccess","onDeleteError","CREATE","DELETE"],"mappings":";;oDASUA,Y;qDAiBAC,Y;qDAYOC,W;qDAGAC,W;qDAIQC,Q;;AA7CzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,KAA1C,QAAuD,oBAAvD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,eAAP,IAA0BC,mBAA1B,QAAqD,qBAArD;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA;;;;;AAIA,SAAUf,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBgB,UAAAA,OAAzB,QAAyBA,OAAzB;AAAA;AAAA;AAEmB,iBAAMR,IAAI,CAACM,WAAD,EAAcE,OAAO,CAACC,MAAtB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAGUC,UAAAA,IAHV,GAGiBR,GAAG,CAACO,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAHpB;;AAAA,gBAIQC,IAAI,CAACC,IAAL,KAAc,GAJtB;AAAA;AAAA;AAAA;;AAAA,gBAIiCD,IAJjC;;AAAA;AAAA;AAKI,iBAAMV,GAAG,CAACG,eAAe,CAACS,eAAhB,CAAgCF,IAAI,CAACG,QAArC,CAAD,CAAT;;AALJ;AAAA;AAMI,iBAAMb,GAAG,CAACG,eAAe,CAACW,SAAhB,EAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMd,GAAG,CAACG,eAAe,CAACY,aAAhB,aAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;AAKA,SAAUvB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBwB,UAAAA,EAAzB,SAAyBA,EAAzB;AAAA;AAAA;AAEmB,iBAAMjB,IAAI,CAACO,cAAD,EAAiBU,EAAjB,CAAV;;AAFnB;AAEUP,UAAAA,MAFV;AAGUC,UAAAA,IAHV,GAGiBR,GAAG,CAACO,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAHpB;;AAAA,gBAIQC,IAAI,CAACC,IAAL,KAAc,GAJtB;AAAA;AAAA;AAAA;;AAAA,gBAIiCD,IAJjC;;AAAA;AAAA;AAKI,iBAAMV,GAAG,CAACG,eAAe,CAACc,eAAhB,CAAgCP,IAAhC,CAAD,CAAT;;AALJ;AAAA;AAMI,iBAAMV,GAAG,CAACG,eAAe,CAACW,SAAhB,EAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMd,GAAG,CAACG,eAAe,CAACe,aAAhB,cAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAO,SAAUzB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACQ,mBAAmB,CAACe,MAArB,EAA6B5B,YAA7B,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CAACQ,mBAAmB,CAACgB,MAArB,EAA6B5B,YAA7B,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRD,IAAI,CAACJ,WAAD,CADI,EAERI,IAAI,CAACH,WAAD,CAFI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, fork, all, call, put, delay } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport SelectorActions, { SelectorActionTypes } from \"../actions/selector\";\nimport { addSelector, deleteSelector } from \"../apis/selector\";\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  try {\n    const result = yield call(addSelector, payload.params);\n    const data = get(result, \"data\", {});\n    if (data.code !== 201) throw data;\n    yield put(SelectorActions.onCreateSuccess(data.selector));\n    yield put(SelectorActions.onGetList());\n  } catch (error) {\n    yield put(SelectorActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * delete\n */\n\nfunction* handleDelete({ id }) {\n  try {\n    const result = yield call(deleteSelector, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(SelectorActions.onDeleteSuccess(data));\n    yield put(SelectorActions.onGetList());\n  } catch (error) {\n    yield put(SelectorActions.onDeleteError(error));\n  }\n}\n\nexport function* watchCreate() {\n  yield takeEvery(SelectorActionTypes.CREATE, handleCreate);\n}\nexport function* watchDelete() {\n  yield takeEvery(SelectorActionTypes.DELETE, handleDelete);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchCreate),\n    fork(watchDelete),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}