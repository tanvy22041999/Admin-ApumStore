{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreate),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport { message } from \"antd\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getDetailCategory, addCategory, updateCategory, deleteCategory } from \"../apis/categories\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllCategories, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 8;\n          return put(CategoryActions.onGetListSuccess(data.categorys));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(CategoryActions.onGetListError(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailCategory, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n          _context2.next = 8;\n          return put(CategoryActions.onGetDetailSuccess(data.category));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 14;\n          return put(CategoryActions.onGetDetailError(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\n/**\n *\n * create\n */\n\n\nfunction handleCreate(_ref3) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          console.log(\"load\", payload);\n          _context3.prev = 2;\n          _context3.next = 5;\n          return call(addCategory, payload.params);\n\n        case 5:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context3.next = 9;\n            break;\n          }\n\n          throw data;\n\n        case 9:\n          _context3.next = 11;\n          return put(CategoryActions.onCreateSuccess(data));\n\n        case 11:\n          _context3.next = 13;\n          return put(CategoryActions.onGetList());\n\n        case 13:\n          _context3.next = 19;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](2);\n          _context3.next = 19;\n          return put(CategoryActions.onCreateError(_context3.t0));\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 15]]);\n}\n/**\n *\n * update\n */\n\n/* function* handleUpdate({ payload, filters, callback, merchant_id }) {\n\n  try {\n    const result = yield call(EcommerceApi.Product.update, payload);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    message.success(\"Update product success!\");\n\n    const detailResult = yield call(EcommerceApi.Product.getDetail, payload.id);\n    yield put(ProductsActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(ProductsActions.onGetList(filters));\n    if(merchant_id){\n      yield put(MerchantActions.onGetListProduct({id:merchant_id}));\n    }\n  } catch (error) {\n    console.log(error);\n    message.error(get(error, \"msg\", \"Error when Update product!\"));\n    yield put(ProductsActions.onUpdateError(error));\n  }\n} */\n\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref4) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _ref4.id;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(deleteCategory, id);\n\n        case 4:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context4.next = 10;\n          return put(CategoryActions.onDeleteSuccess(data));\n\n        case 10:\n          _context4.next = 12;\n          return put(CategoryActions.onGetList());\n\n        case 12:\n          _context4.next = 18;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 18;\n          return put(CategoryActions.onDeleteError(_context4.t0));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 14]]);\n}\n/**\n *\n */\n\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watchCreate() {\n  return _regeneratorRuntime.wrap(function watchCreate$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(CategoryActionTypes.CREATE, handleCreate);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n/* export function* watchUpdate() {\n  yield takeEvery(CategoryActionTypes.UPDATE, handleUpdate);\n} */\n\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(CategoryActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchCreate),\n          /* fork(watchUpdate), */\n          fork(watchDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/categories.js"],"names":["handleGetList","handleGetDetail","handleCreate","handleDelete","watchGetList","watchGetDetail","watchCreate","watchDelete","rootSaga","takeEvery","fork","all","call","put","get","message","CategoryActions","CategoryActionTypes","getAllCategories","getDetailCategory","addCategory","updateCategory","deleteCategory","payload","result","data","onGetListSuccess","categorys","onGetListError","filters","id","onGetDetailSuccess","category","onGetDetailError","console","log","params","code","onCreateSuccess","onGetList","onCreateError","onDeleteSuccess","onDeleteError","GET_LIST","GET_DETAIL","CREATE","DELETE"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport { message } from \"antd\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getDetailCategory, addCategory, updateCategory, deleteCategory } from \"../apis/categories\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    yield put(CategoryActions.onGetListSuccess(data.categorys));\n  } catch (error) {\n    yield put(CategoryActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailCategory, id);\n    const data = get(result, \"data\", {});\n    yield put(CategoryActions.onGetDetailSuccess(data.category));\n  } catch (error) {\n    yield put(CategoryActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  console.log(\"load\",payload);\n  try {\n    const result = yield call(addCategory, payload.params);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onCreateSuccess(data));\n    yield put(CategoryActions.onGetList());\n  } catch (error) {\n    yield put(CategoryActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\n/* function* handleUpdate({ payload, filters, callback, merchant_id }) {\n\n  try {\n    const result = yield call(EcommerceApi.Product.update, payload);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    message.success(\"Update product success!\");\n\n    const detailResult = yield call(EcommerceApi.Product.getDetail, payload.id);\n    yield put(ProductsActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(ProductsActions.onGetList(filters));\n    if(merchant_id){\n      yield put(MerchantActions.onGetListProduct({id:merchant_id}));\n    }\n  } catch (error) {\n    console.log(error);\n    message.error(get(error, \"msg\", \"Error when Update product!\"));\n    yield put(ProductsActions.onUpdateError(error));\n  }\n} */\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id }) {\n  try {\n    const result = yield call(deleteCategory, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onDeleteSuccess(data));\n    yield put(CategoryActions.onGetList());\n  } catch (error) {\n    yield put(CategoryActions.onDeleteError(error));\n  }\n}\n\n/**\n *\n */\n\nexport function* watchGetList() {\n  yield takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n}\n\nexport function* watchCreate() {\n  yield takeEvery(CategoryActionTypes.CREATE, handleCreate);\n}\n/* export function* watchUpdate() {\n  yield takeEvery(CategoryActionTypes.UPDATE, handleUpdate);\n} */\nexport function* watchDelete() {\n  yield takeEvery(CategoryActionTypes.DELETE, handleDelete);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetDetail),\n    fork(watchCreate),\n    /* fork(watchUpdate), */\n    fork(watchDelete),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}