{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\views\\\\charts\\\\MainChartExample.js\";\nimport React from 'react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils/src';\nimport { connect } from \"react-redux\";\nimport { compose } from 'redux';\nvar brandSuccess = getStyle('success') || '#4dbd74';\nvar brandInfo = getStyle('info') || '#20a8d8';\nvar brandDanger = getStyle('danger') || '#f86c6b';\n\nvar random = function random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nvar defaultDatasets = function () {\n  var elements = 12;\n  var data1 = [];\n  /*     const data2 = []\n      const data3 = [] */\n\n  for (var i = 0; i <= elements; i++) {\n    data1.push(random(50, 200));\n  }\n\n  return [{\n    label: 'My First dataset',\n    backgroundColor: hexToRgba(brandInfo, 10),\n    borderColor: brandInfo,\n    pointHoverBackgroundColor: brandInfo,\n    borderWidth: 2,\n    data: data1\n  }\n  /* {\n    label: 'My Second dataset',\n    backgroundColor: 'transparent',\n    borderColor: brandSuccess,\n    pointHoverBackgroundColor: brandSuccess,\n    borderWidth: 2,\n    data: data2\n  },\n  {\n    label: 'My Third dataset',\n    backgroundColor: 'transparent',\n    borderColor: brandDanger,\n    pointHoverBackgroundColor: brandDanger,\n    borderWidth: 1,\n    borderDash: [8, 5],\n    data: data3\n  } */\n  ];\n}();\n\nvar defaultOptions = function () {\n  return {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          drawOnChartArea: false\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          stepSize: Math.ceil(250 / 5),\n          max: 250\n        },\n        gridLines: {\n          display: true\n        }\n      }]\n    },\n    elements: {\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3\n      }\n    }\n  };\n}();\n\nvar MainChartExample = /*#__PURE__*/function (_Component) {\n  _inherits(MainChartExample, _Component);\n\n  var _super = _createSuper(MainChartExample);\n\n  function MainChartExample() {\n    _classCallCheck(this, MainChartExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MainChartExample, [{\n    key: \"render\",\n    value: function render() {\n      var attributes = this.props.attributes;\n      return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n        datasets: defaultDatasets,\n        options: defaultOptions,\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return MainChartExample;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetRevenue: function onGetRevenue() {}\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(MainChartExample);","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/views/charts/MainChartExample.js"],"names":["React","CChartLine","getStyle","hexToRgba","connect","compose","brandSuccess","brandInfo","brandDanger","random","min","max","Math","floor","defaultDatasets","elements","data1","i","push","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","data","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","point","radius","hitRadius","hoverRadius","hoverBorderWidth","MainChartExample","attributes","props","Component","mapStateToProps","state","mapDispatchToProps","dispatch","onGetRevenue","withConnect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils/src'\nimport { connect } from \"react-redux\";\nimport {compose} from 'redux';\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 12\n    const data1 = []\n/*     const data2 = []\n    const data3 = [] */\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      /* {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      } */\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\nclass MainChartExample  extends Component {\n  render(){\n    const {attributes} = this.props;\n    return (\n      <CChartLine\n        {...attributes}\n        datasets={defaultDatasets}\n        options={defaultOptions}\n        labels={['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']}\n      />\n    )\n  }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetRevenue: () => {\n    },\n  }\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)\n\nexport default compose(\n  withConnect\n)(MainChartExample)\n"]},"metadata":{},"sourceType":"module"}