{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vyduong/Desktop/DOChoi_FE/DATN_WEBTMDT/FE/Admin_WebBanLapTop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleFilter),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetOnline),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetSession),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetOnline),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetSession),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchFilter),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put, delay } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport UsersActions, { UsersActionTypes } from \"../actions/user\";\nimport { getAllUsers, getDetailUser, deleteUser, updateUser, getOnlineUsers, getSessionUsers } from \"../apis/user\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllUsers, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 8;\n          return put(UsersActions.onGetListSuccess(data.users, data.total));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(UsersActions.onGetListError(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction handleFilter(_ref2) {\n  var payload, keyword, result, data;\n  return _regeneratorRuntime.wrap(function handleFilter$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.next = 3;\n          return delay(500);\n\n        case 3:\n          keyword = payload.keyword;\n          console.log(keyword);\n          _context2.prev = 5;\n          _context2.next = 8;\n          return call(getAllUsers, {\n            phone: keyword,\n            limit: 5,\n            page: 0\n          });\n\n        case 8:\n          result = _context2.sent;\n          data = get(result, \"data\");\n          _context2.next = 12;\n          return put(UsersActions.onFilterSuccess(data.users));\n\n        case 12:\n          _context2.next = 16;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](5);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[5, 14]]);\n}\n\nfunction handleGetDetail(_ref3) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          filters = _ref3.filters, id = _ref3.id;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(getDetailUser, id);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n          _context3.next = 8;\n          return put(UsersActions.onGetDetailSuccess(data.user));\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 14;\n          return put(UsersActions.onGetDetailError(_context3.t0));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 10]]);\n}\n/**\n *\n * update\n */\n\n\nfunction handleUpdate(_ref4) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(updateUser, payload.data, payload.id);\n\n        case 4:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context4.next = 10;\n          return put(UsersActions.onUpdateSuccess(data.user));\n\n        case 10:\n          _context4.next = 12;\n          return put(UsersActions.onGetList(payload.params));\n\n        case 12:\n          _context4.next = 18;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 18;\n          return put(UsersActions.onUpdateError(_context4.t0));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 14]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref5) {\n  var id, params, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref5.id, params = _ref5.params;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(deleteUser, id);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(UsersActions.onDeleteSuccess(data));\n\n        case 10:\n          _context5.next = 12;\n          return put(UsersActions.onGetList(params));\n\n        case 12:\n          _context5.next = 18;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 18;\n          return put(UsersActions.onDeleteError(_context5.t0));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 14]]);\n}\n\nfunction handleGetOnline(_ref6) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetOnline$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return call(getOnlineUsers, payload);\n\n        case 4:\n          result = _context6.sent;\n          data = get(result, \"data\");\n          _context6.next = 8;\n          return put(UsersActions.onGetOnlineSuccess(data.total));\n\n        case 8:\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](1);\n          _context6.next = 14;\n          return put(UsersActions.onGetOnlineError(_context6.t0));\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[1, 10]]);\n}\n\nfunction handleGetSession(_ref7) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetSession$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context7.prev = 1;\n          _context7.next = 4;\n          return call(getSessionUsers, payload);\n\n        case 4:\n          result = _context7.sent;\n          data = get(result, \"data\");\n          _context7.next = 8;\n          return put(UsersActions.onGetSessionSuccess(data.total));\n\n        case 8:\n          _context7.next = 14;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](1);\n          _context7.next = 14;\n          return put(UsersActions.onGetSessionError(_context7.t0));\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[1, 10]]);\n}\n/**\n *\n */\n\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(UsersActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(UsersActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function watchUpdate() {\n  return _regeneratorRuntime.wrap(function watchUpdate$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(UsersActionTypes.UPDATE, handleUpdate);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(UsersActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\nexport function watchGetOnline() {\n  return _regeneratorRuntime.wrap(function watchGetOnline$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UsersActionTypes.GET_ONLINE, handleGetOnline);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\nexport function watchGetSession() {\n  return _regeneratorRuntime.wrap(function watchGetSession$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(UsersActionTypes.GET_SESSION, handleGetSession);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\nexport function watchFilter() {\n  return _regeneratorRuntime.wrap(function watchFilter$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(UsersActionTypes.FILTER, handleFilter);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchUpdate), fork(watchDelete), fork(watchGetOnline), fork(watchGetSession), fork(watchFilter)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}","map":{"version":3,"sources":["/Users/vyduong/Desktop/DOChoi_FE/DATN_WEBTMDT/FE/Admin_WebBanLapTop/src/redux/sagas/user.js"],"names":["handleGetList","handleFilter","handleGetDetail","handleUpdate","handleDelete","handleGetOnline","handleGetSession","watchGetList","watchGetDetail","watchUpdate","watchDelete","watchGetOnline","watchGetSession","watchFilter","rootSaga","takeEvery","fork","all","call","put","delay","get","UsersActions","UsersActionTypes","getAllUsers","getDetailUser","deleteUser","updateUser","getOnlineUsers","getSessionUsers","payload","result","data","onGetListSuccess","users","total","onGetListError","keyword","console","log","phone","limit","page","onFilterSuccess","filters","id","onGetDetailSuccess","user","onGetDetailError","code","onUpdateSuccess","onGetList","params","onUpdateError","onDeleteSuccess","onDeleteError","onGetOnlineSuccess","onGetOnlineError","onGetSessionSuccess","onGetSessionError","GET_LIST","GET_DETAIL","UPDATE","DELETE","GET_ONLINE","GET_SESSION","FILTER"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put, delay } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport UsersActions, { UsersActionTypes } from \"../actions/user\";\nimport { getAllUsers, getDetailUser,  deleteUser, updateUser, getOnlineUsers, getSessionUsers } from \"../apis/user\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllUsers, payload);\n    const data = get(result, \"data\");\n    yield put(UsersActions.onGetListSuccess(data.users, data.total));\n  } catch (error) {\n    yield put(UsersActions.onGetListError(error));\n  }\n}\n\nfunction* handleFilter({ payload }) {\n  yield delay(500);\n  const { keyword } = payload;\n  console.log(keyword)\n  try {\n    const result = yield call(getAllUsers, {\n      phone: keyword,\n      limit: 5,\n      page:0\n    });\n    const data = get(result, \"data\");\n    yield put(UsersActions.onFilterSuccess(data.users));\n  } catch (error) {\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailUser, id);\n    const data = get(result, \"data\", {});\n    yield put(UsersActions.onGetDetailSuccess(data.user));\n  } catch (error) {\n    yield put(UsersActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n * update\n */\n\nfunction* handleUpdate( {payload} ) {\n  try {\n    var result = yield call(updateUser, payload.data, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(UsersActions.onUpdateSuccess(data.user));\n    yield put(UsersActions.onGetList(payload.params));\n  } catch (error) {\n    yield put(UsersActions.onUpdateError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id, params }) {\n  try {\n    const result = yield call(deleteUser, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(UsersActions.onDeleteSuccess(data));\n    yield put(UsersActions.onGetList(params));\n  } catch (error) {\n    yield put(UsersActions.onDeleteError(error));\n  }\n}\n\nfunction* handleGetOnline({ payload }) {\n  try {\n    const result = yield call(getOnlineUsers, payload);\n    const data = get(result, \"data\");\n    yield put(UsersActions.onGetOnlineSuccess(data.total));\n  } catch (error) {\n    yield put(UsersActions.onGetOnlineError(error));\n  }\n}\n\nfunction* handleGetSession({ payload }) {\n  try {\n    const result = yield call(getSessionUsers, payload);\n    const data = get(result, \"data\");\n    yield put(UsersActions.onGetSessionSuccess(data.total));\n  } catch (error) {\n    yield put(UsersActions.onGetSessionError(error));\n  }\n}\n\n/**\n *\n */\nexport function* watchGetList() {\n  yield takeEvery(UsersActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(UsersActionTypes.GET_DETAIL, handleGetDetail);\n}\nexport function* watchUpdate() {\n  yield takeEvery(UsersActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(UsersActionTypes.DELETE, handleDelete);\n}\nexport function* watchGetOnline() {\n  yield takeEvery(UsersActionTypes.GET_ONLINE, handleGetOnline);\n}\nexport function* watchGetSession() {\n  yield takeEvery(UsersActionTypes.GET_SESSION, handleGetSession);\n}\nexport function* watchFilter() {\n  yield takeEvery(UsersActionTypes.FILTER, handleFilter);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetDetail),\n    fork(watchUpdate),\n    fork(watchDelete),\n    fork(watchGetOnline),\n    fork(watchGetSession),\n    fork(watchFilter),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}