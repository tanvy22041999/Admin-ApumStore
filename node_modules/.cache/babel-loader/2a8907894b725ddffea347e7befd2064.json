{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\components\\\\Colors\\\\ColorList.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n// @Components\n\nimport { CCard, CCardBody, CCardHeader, CCol, CDataTable, CButton, CRow } from '@coreui/react';\nimport ColorDetail from './ColorDetail'; // @Actions\n\nimport ColorActions from \"../../redux/actions/color\";\nvar fields = ['name_vn', 'name_en', 'color', {\n  key: 'actions',\n  _style: {\n    width: '30%'\n  }\n}];\n\nvar ColorList = /*#__PURE__*/function (_Component) {\n  _inherits(ColorList, _Component);\n\n  var _super = _createSuper(ColorList);\n\n  function ColorList(props) {\n    var _this;\n\n    _classCallCheck(this, ColorList);\n\n    _this = _super.call(this, props);\n\n    _this.setLarge = function (large) {\n      _this.setState({\n        large: large\n      });\n    };\n\n    _this.submit = function (id) {\n      confirmAlert({\n        title: 'Thông báo',\n        message: 'Bạn có thực sự muốn xóa color này?',\n        buttons: [{\n          label: 'Yes',\n          onClick: function onClick() {\n            return _this.onDelete(id);\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    _this.handleListProduct = function (id) {\n      var history = _this.props.history;\n      var pathname = '/products/product-manage';\n      history.push(\"\".concat(pathname, \"?color=\").concat(id));\n    };\n\n    _this.onDelete = function (_id) {\n      var onDelete = _this.props.onDelete;\n      onDelete(_id);\n    };\n\n    _this.onUpdate = function (large, item) {\n      var onGetDetail = _this.props.onGetDetail;\n\n      _this.setState({\n        large: large\n      });\n\n      if (item) {\n        onGetDetail(item);\n      }\n    };\n\n    _this.onClose = function (large) {\n      var onClearDetail = _this.props.onClearDetail;\n\n      _this.setState({\n        large: large\n      });\n\n      onClearDetail();\n    };\n\n    _this.state = {\n      large: false\n    };\n    return _this;\n  }\n\n  _createClass(ColorList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          onClearState = _this$props.onClearState,\n          onGetList = _this$props.onGetList;\n      onClearState();\n      onGetList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var large = this.state.large;\n      var _this$props2 = this.props,\n          listColor = _this$props2.listColor,\n          colorDetail = _this$props2.colorDetail,\n          onClearDetail = _this$props2.onClearDetail;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CCardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"float-left my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"Danh s\\xE1ch m\\xE0u\"), /*#__PURE__*/React.createElement(CButton, {\n        onClick: function onClick() {\n          return _this2.setLarge(!large);\n        },\n        className: \"mb-1 float-right\",\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \" Th\\xEAm m\\xE0u\")), /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CDataTable, {\n        items: listColor,\n        fields: fields,\n        hover: true,\n        striped: true,\n        bordered: true,\n        itemsPerPage: 10,\n        pagination: true,\n        scopedSlots: {\n          'name_vn': function name_vn(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }\n            }, item.name_vn);\n          },\n          'name_en': function name_en(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }\n            }, item.name_en);\n          },\n          'color': function color(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(CRow, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(CCol, {\n              xl: \"2\",\n              md: \"4\",\n              sm: \"6\",\n              xs: \"12\",\n              className: \"mb-4\",\n              style: {\n                paddingTop: '0',\n                height: '25px',\n                backgroundColor: item.code\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }\n            })));\n          },\n          'actions': function actions(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.handleListProduct(item._id);\n              },\n              className: \"mr-1 mb-1 mb-xl-0\",\n              color: \"success\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }\n            }, \"Danh s\\xE1ch\"), /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.onUpdate(!large, item._id);\n              },\n              className: \"mr-1 mb-1 mb-xl-0\",\n              color: \"warning\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }\n            }, \"S\\u1EEDa\"), /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.submit(item._id);\n              },\n              className: \"mr-1\",\n              color: \"danger\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }\n            }, \"X\\xF3a\"));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }), colorDetail && large && /*#__PURE__*/React.createElement(ColorDetail, {\n        large: large,\n        color: colorDetail,\n        onClose: this.onClose,\n        onClearDetail: onClearDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 44\n        }\n      }), !colorDetail && large && /*#__PURE__*/React.createElement(ColorDetail, {\n        large: large,\n        color: colorDetail,\n        onClose: this.onClose,\n        onClearDetail: onClearDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 45\n        }\n      }))))));\n    }\n  }]);\n\n  return ColorList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listColor: state.color.list,\n    colorDetail: state.color.detail\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetList: function onGetList() {\n      dispatch(ColorActions.onGetList());\n    },\n    onClearState: function onClearState() {\n      dispatch(ColorActions.onClearState());\n    },\n    onClearDetail: function onClearDetail() {\n      dispatch(ColorActions.onClearDetail());\n    },\n    onGetDetail: function onGetDetail(id) {\n      dispatch(ColorActions.onGetDetail(id));\n    },\n    onDelete: function onDelete(id) {\n      dispatch(ColorActions.onDelete({\n        id: id\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorList);","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/components/Colors/ColorList.js"],"names":["React","Component","connect","confirmAlert","CCard","CCardBody","CCardHeader","CCol","CDataTable","CButton","CRow","ColorDetail","ColorActions","fields","key","_style","width","ColorList","props","setLarge","large","setState","submit","id","title","message","buttons","label","onClick","onDelete","handleListProduct","history","pathname","push","_id","onUpdate","item","onGetDetail","onClose","onClearDetail","state","onClearState","onGetList","listColor","colorDetail","name_vn","name_en","paddingTop","height","backgroundColor","code","mapStateToProps","color","list","detail","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n// @Components\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CButton,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport ColorDetail from './ColorDetail'\r\n// @Actions\r\nimport ColorActions from \"../../redux/actions/color\";\r\n\r\nconst fields = ['name_vn', 'name_en', 'color',{ key: 'actions', _style: { width: '30%'} }]\r\n\r\nclass ColorList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      large: false,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { onClearState, onGetList } = this.props;\r\n    onClearState();\r\n    onGetList();\r\n  }\r\n\r\n  setLarge = (large) => {\r\n    this.setState({\r\n      large\r\n    })\r\n  }\r\n\r\n  submit = (id) => {\r\n    confirmAlert({\r\n      title: 'Thông báo',\r\n      message: 'Bạn có thực sự muốn xóa color này?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.onDelete(id)\r\n        },\r\n        {\r\n          label: 'No'\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  handleListProduct = (id) =>{\r\n    const { history } = this.props;\r\n    const pathname = '/products/product-manage';\r\n    history.push(`${pathname}?color=${id}`);\r\n  }\r\n\r\n  onDelete = (_id)=>{\r\n    const {onDelete} = this.props;\r\n    onDelete(_id);\r\n  }\r\n\r\n  onUpdate = (large, item) =>{\r\n    const { onGetDetail } = this.props;\r\n    this.setState({\r\n      large\r\n    })\r\n    if(item){onGetDetail(item)}\r\n  }\r\n\r\n  onClose = (large) =>{\r\n    const { onClearDetail } = this.props;\r\n    this.setState({\r\n      large\r\n    })\r\n    onClearDetail();\r\n  }\r\n\r\n  render () {\r\n    const {large} = this.state;\r\n    const {listColor, colorDetail, onClearDetail} = this.props;\r\n    return (\r\n      <>\r\n        <CRow>\r\n          <CCol>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <h5 className=\"float-left my-2\">Danh sách màu</h5>\r\n                <CButton\r\n                  onClick={() => this.setLarge(!large)}\r\n                  className=\"mb-1 float-right\"\r\n                  color=\"success\"\r\n                > Thêm màu\r\n                </CButton>\r\n              </CCardHeader>\r\n\r\n              <CCardBody>\r\n                <CDataTable\r\n                  items={listColor}\r\n                  fields={fields}\r\n                  hover\r\n                  striped\r\n                  bordered\r\n                  itemsPerPage={10}\r\n                  pagination\r\n                  scopedSlots = {{\r\n                    'name_vn': (item) => (\r\n                      <td>{item.name_vn}</td>\r\n                    ),\r\n                    'name_en': (item) => (\r\n                      <td>{item.name_en}</td>\r\n                    ),\r\n                    'color': (item) => (\r\n                      <td><CRow><CCol xl=\"2\" md=\"4\" sm=\"6\" xs=\"12\" className=\"mb-4\" style={{paddingTop: '0',height:'25px', backgroundColor: item.code}}>\r\n                    </CCol></CRow></td>\r\n                    ),\r\n                    'actions':\r\n                    (item)=>(\r\n                      <td>\r\n                        <CButton\r\n                          onClick={() => this.handleListProduct(item._id)}\r\n                          className=\"mr-1 mb-1 mb-xl-0\"\r\n                          color=\"success\"\r\n                        >\r\n                          Danh sách\r\n                        </CButton>\r\n                        <CButton\r\n                          onClick={() => this.onUpdate(!large, item._id)}\r\n                          className=\"mr-1 mb-1 mb-xl-0\"\r\n                          color=\"warning\"\r\n                        >\r\n                          Sửa\r\n                        </CButton>\r\n                        <CButton\r\n                          onClick={() => this.submit(item._id)}\r\n                          className=\"mr-1\"\r\n                          color=\"danger\"\r\n                        >\r\n                          Xóa\r\n                        </CButton>\r\n                      </td>)\r\n                  }}\r\n                />\r\n                {(colorDetail && large) && <ColorDetail large={large} color={colorDetail} onClose={this.onClose}\r\n                onClearDetail={onClearDetail}/>}\r\n                {(!colorDetail && large) && <ColorDetail large={large} color={colorDetail} onClose={this.onClose}\r\n                onClearDetail={onClearDetail}/>}\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listColor: state.color.list,\r\n    colorDetail: state.color.detail,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetList: () => {\r\n      dispatch(ColorActions.onGetList())\r\n    },\r\n    onClearState: () =>{\r\n      dispatch(ColorActions.onClearState())\r\n    },\r\n    onClearDetail: () =>{\r\n      dispatch(ColorActions.onClearDetail())\r\n    },\r\n    onGetDetail: (id) => {\r\n      dispatch(ColorActions.onGetDetail(id))\r\n    },\r\n    onDelete: (id) =>{\r\n      dispatch(ColorActions.onDelete({id}))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorList)\r\n"]},"metadata":{},"sourceType":"module"}