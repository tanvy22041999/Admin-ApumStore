{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\views\\\\notifications\\\\toaster\\\\Toaster.js\";\n\nimport React, { useState } from 'react';\nimport { CCard, CCardHeader, CCardBody, CToast, CToastBody, CToastHeader, CToaster, CForm, CInput, CInputCheckbox, CButton, CContainer, CRow, CCol, CFormGroup, CLabel } from '@coreui/react';\n\nvar Toaster = function Toaster() {\n  var positions = ['static', 'top-left', 'top-center', 'top-right', 'top-full', 'bottom-left', 'bottom-center', 'bottom-right', 'bottom-full'];\n\n  var _useState = useState([{\n    position: 'static'\n  }, {\n    position: 'static'\n  }, {\n    position: 'top-right',\n    autohide: 3000\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      toasts = _useState2[0],\n      setToasts = _useState2[1];\n\n  var _useState3 = useState('top-right'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      position = _useState4[0],\n      setPosition = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      autohide = _useState6[0],\n      setAutohide = _useState6[1];\n\n  var _useState7 = useState(5000),\n      _useState8 = _slicedToArray(_useState7, 2),\n      autohideValue = _useState8[0],\n      setAutohideValue = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      closeButton = _useState10[0],\n      setCloseButton = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fade = _useState12[0],\n      setFade = _useState12[1];\n\n  var addToast = function addToast() {\n    setToasts([].concat(_toConsumableArray(toasts), [{\n      position: position,\n      autohide: autohide && autohideValue,\n      closeButton: closeButton,\n      fade: fade\n    }]));\n  };\n\n  var toasters = function () {\n    return toasts.reduce(function (toasters, toast) {\n      toasters[toast.position] = toasters[toast.position] || [];\n      toasters[toast.position].push(toast);\n      return toasters;\n    }, {});\n  }();\n\n  return /*#__PURE__*/React.createElement(CCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CCardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Toasts.\"), /*#__PURE__*/React.createElement(CCardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    sm: \"12\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Add toast with following props:\"), /*#__PURE__*/React.createElement(CFormGroup, {\n    variant: \"custom-checkbox\",\n    className: \"my-2 mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputCheckbox, {\n    id: \"autohide\",\n    checked: autohide,\n    onChange: function onChange(e) {\n      setAutohide(e.target.checked);\n    },\n    custom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CLabel, {\n    variant: \"custom-checkbox\",\n    htmlFor: \"autohide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, \"Autohide of the toast\")), autohide && /*#__PURE__*/React.createElement(CFormGroup, {\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"ccyear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Time to autohide\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    value: autohideValue,\n    onChange: function onChange(e) {\n      setAutohideValue(Number(e.target.value));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CFormGroup, {\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    htmlFor: \"ccyear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: position,\n    onChange: function onChange(e) {\n      setPosition(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, positions.map(function (position, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, position);\n  }))), /*#__PURE__*/React.createElement(CFormGroup, {\n    variant: \"custom-checkbox\",\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputCheckbox, {\n    id: \"fade\",\n    checked: fade,\n    onChange: function onChange(e) {\n      setFade(e.target.checked);\n    },\n    custom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CLabel, {\n    variant: \"custom-checkbox\",\n    htmlFor: \"fade\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"fade\")), /*#__PURE__*/React.createElement(CFormGroup, {\n    variant: \"custom-checkbox\",\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CInputCheckbox, {\n    id: \"close\",\n    custom: true,\n    checked: closeButton,\n    onChange: function onChange(e) {\n      setCloseButton(e.target.checked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CLabel, {\n    variant: \"custom-checkbox\",\n    htmlFor: \"close\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"closeButton\")), /*#__PURE__*/React.createElement(CButton, {\n    className: \"mr-1 w-25\",\n    color: \"success\",\n    onClick: addToast,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Add toast\"))), /*#__PURE__*/React.createElement(CCol, {\n    sm: \"12\",\n    lg: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, Object.keys(toasters).map(function (toasterKey) {\n    return /*#__PURE__*/React.createElement(CToaster, {\n      position: toasterKey,\n      key: 'toaster' + toasterKey,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, toasters[toasterKey].map(function (toast, key) {\n      return /*#__PURE__*/React.createElement(CToast, {\n        key: 'toast' + key,\n        show: true,\n        autohide: toast.autohide,\n        fade: toast.fade,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CToastHeader, {\n        closeButton: toast.closeButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \"Toast title\"), /*#__PURE__*/React.createElement(CToastBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, \"This is a toast in \".concat(toasterKey, \" positioned toaster number \").concat(key + 1, \".\")));\n    }));\n  }))))));\n};\n\nexport default Toaster;","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/views/notifications/toaster/Toaster.js"],"names":["React","useState","CCard","CCardHeader","CCardBody","CToast","CToastBody","CToastHeader","CToaster","CForm","CInput","CInputCheckbox","CButton","CContainer","CRow","CCol","CFormGroup","CLabel","Toaster","positions","position","autohide","toasts","setToasts","setPosition","setAutohide","autohideValue","setAutohideValue","closeButton","setCloseButton","fade","setFade","addToast","toasters","reduce","toast","push","e","target","checked","Number","value","map","i","Object","keys","toasterKey","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CToast,\r\n  CToastBody,\r\n  CToastHeader,\r\n  CToaster,\r\n  CForm,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CButton,\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel\r\n} from '@coreui/react'\r\n\r\nconst Toaster = () => {\r\n\r\n  const positions = [\r\n    'static',\r\n    'top-left',\r\n    'top-center',\r\n    'top-right',\r\n    'top-full',\r\n    'bottom-left',\r\n    'bottom-center',\r\n    'bottom-right',\r\n    'bottom-full'\r\n  ]\r\n\r\n  const [toasts, setToasts] = useState([\r\n    { position: 'static'},\r\n    { position: 'static'},\r\n    { position: 'top-right', autohide: 3000 }\r\n  ])\r\n\r\n  const [position, setPosition] = useState('top-right')\r\n  const [autohide, setAutohide] = useState(true)\r\n  const [autohideValue, setAutohideValue] = useState(5000)\r\n  const [closeButton, setCloseButton] = useState(true)\r\n  const [fade, setFade] = useState(true)\r\n\r\n  const addToast = () => {\r\n    setToasts([\r\n      ...toasts, \r\n      { position, autohide: autohide && autohideValue, closeButton, fade }\r\n    ])\r\n  }\r\n\r\n\r\n  const toasters = (()=>{\r\n    return toasts.reduce((toasters, toast) => {\r\n      toasters[toast.position] = toasters[toast.position] || []\r\n      toasters[toast.position].push(toast)\r\n      return toasters\r\n    }, {})\r\n  })()\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        Toasts.\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CContainer>\r\n          <CRow>\r\n            <CCol sm=\"12\" lg=\"6\">\r\n              <CForm>\r\n                <h5>Add toast with following props:</h5>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2 mt-4\">\r\n                  <CInputCheckbox\r\n                    id=\"autohide\"\r\n                    checked={autohide}\r\n                    onChange={e => { setAutohide(e.target.checked) }}\r\n                    custom\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"autohide\">\r\n                    Autohide of the toast\r\n                  </CLabel>\r\n                </CFormGroup>\r\n                {\r\n                  autohide &&\r\n                  <CFormGroup className=\"my-2\">\r\n                    <CLabel htmlFor=\"ccyear\">Time to autohide</CLabel>\r\n                    <CInput\r\n                      type=\"number\"\r\n                      value={autohideValue}\r\n                      onChange={e => {\r\n                        setAutohideValue(Number(e.target.value))\r\n                      }}\r\n                    />\r\n                  </CFormGroup>\r\n                }\r\n\r\n                <CFormGroup className=\"my-2\">\r\n                  <CLabel htmlFor=\"ccyear\">Position</CLabel>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={position}\r\n                    onChange={e => {setPosition(e.target.value)}}\r\n                  >\r\n                    {\r\n                      positions.map((position, i)=>(\r\n                        <option key={i}>{position}</option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\r\n                  <CInputCheckbox\r\n                    id=\"fade\"\r\n                    checked={fade}\r\n                    onChange={e => { setFade(e.target.checked) }}\r\n                    custom\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"fade\">fade</CLabel>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\r\n                  <CInputCheckbox\r\n                    id=\"close\"\r\n                    custom\r\n                    checked={closeButton}\r\n                    onChange={e=> { setCloseButton(e.target.checked) }}\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"close\">\r\n                    closeButton\r\n                  </CLabel>\r\n                </CFormGroup>\r\n\r\n                <CButton\r\n                  className=\"mr-1 w-25\"\r\n                  color=\"success\"\r\n                  onClick={addToast}\r\n                >\r\n                  Add toast\r\n                </CButton>\r\n\r\n              </CForm>\r\n            </CCol>\r\n            <CCol sm=\"12\" lg=\"6\">\r\n              {Object.keys(toasters).map((toasterKey) => (\r\n                <CToaster\r\n                  position={toasterKey}\r\n                  key={'toaster' + toasterKey}\r\n                >\r\n                  {\r\n                    toasters[toasterKey].map((toast, key)=>{\r\n                    return(\r\n                      <CToast\r\n                        key={'toast' + key}\r\n                        show={true}\r\n                        autohide={toast.autohide}\r\n                        fade={toast.fade}\r\n                      >\r\n                        <CToastHeader closeButton={toast.closeButton}>\r\n                          Toast title\r\n                        </CToastHeader>\r\n                        <CToastBody>\r\n                          {`This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`}\r\n                        </CToastBody>\r\n                      </CToast>\r\n                    )\r\n                  })\r\n                  }\r\n                </CToaster>\r\n              ))}\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Toaster\r\n"]},"metadata":{},"sourceType":"module"}