{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\components\\\\Operations\\\\OperationList.js\";\nimport React, { Component } from 'react';\nimport { get } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { CCard, CCardBody, CCardHeader, CCol, CDataTable, CButton, CRow } from '@coreui/react';\nimport OperationDetail from './OperationDetail';\nimport OperationActions from \"../../redux/actions/operations\";\nvar fields = ['name', {\n  key: 'actions',\n  _style: {\n    width: '15%'\n  }\n}];\n\nvar ProductList = /*#__PURE__*/function (_Component) {\n  _inherits(ProductList, _Component);\n\n  var _super = _createSuper(ProductList);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _super.call(this, props);\n\n    _this.setLarge = function (large) {\n      _this.setState({\n        large: large\n      });\n    };\n\n    _this.onUpdate = function (large, item) {\n      var onGetDetail = _this.props.onGetDetail;\n\n      _this.setState({\n        large: large\n      });\n\n      if (item) {\n        onGetDetail(item);\n      } //onGetDetail(item)\n\n    };\n\n    _this.onClose = function (large) {\n      var onClearDetail = _this.props.onClearDetail;\n\n      _this.setState({\n        large: large\n      });\n\n      onClearDetail();\n    };\n\n    _this.onSubmit = function (data, _id) {\n      var _this$props = _this.props,\n          onCreate = _this$props.onCreate,\n          onUpdate = _this$props.onUpdate;\n\n      if (_id === '') {\n        onCreate(data);\n      } else {\n        onUpdate(_id, data);\n      }\n    };\n\n    _this.state = {\n      large: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          onClearState = _this$props2.onClearState,\n          onGetList = _this$props2.onGetList;\n      onClearState();\n      onGetList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var large = this.state.large;\n      var listOperations = this.props.listOperations;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CCardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"float-left my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"Danh s\\xE1ch h\\u1EC7 \\u0111i\\u1EC1u h\\xE0nh\"), /*#__PURE__*/React.createElement(CButton, {\n        onClick: function onClick() {\n          return _this2.setLarge(!large);\n        },\n        className: \"mb-1 float-right\",\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, \" Th\\xEAm lo\\u1EA1i s\\u1EA3n ph\\u1EA9m\")), /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CDataTable, {\n        items: listOperations,\n        fields: fields,\n        hover: true,\n        striped: true,\n        bordered: true,\n        itemsPerPage: 10,\n        pagination: true,\n        scopedSlots: {\n          'name': function name(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }\n            }, item.operation);\n          },\n          'actions': function actions(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.onUpdate(!large, item._id);\n              },\n              className: \"mr-1 mb-1 mb-xl-0\",\n              color: \"warning\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }\n            }, \"S\\u1EEDa\"), /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.setLarge(!large);\n              },\n              className: \"mr-1\",\n              color: \"danger\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }\n            }, \"X\\xF3a\"));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listOperations: state.operations.list\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetList: function onGetList() {\n      dispatch(OperationActions.onGetList());\n    },\n    onClearState: function onClearState() {\n      dispatch(OperationActions.onClearState());\n    },\n    onClearDetail: function onClearDetail() {\n      dispatch(OperationActions.onClearDetail());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/components/Operations/OperationList.js"],"names":["React","Component","get","connect","CCard","CCardBody","CCardHeader","CCol","CDataTable","CButton","CRow","OperationDetail","OperationActions","fields","key","_style","width","ProductList","props","setLarge","large","setState","onUpdate","item","onGetDetail","onClose","onClearDetail","onSubmit","data","_id","onCreate","state","onClearState","onGetList","listOperations","operation","mapStateToProps","operations","list","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\nimport { get } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CButton,\n  CRow,\n} from '@coreui/react'\nimport OperationDetail from './OperationDetail'\nimport OperationActions from \"../../redux/actions/operations\";\n\nconst fields = ['name', { key: 'actions', _style: { width: '15%'} }]\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      large: false,\n    }\n  }\n  componentDidMount() {\n    const { onClearState, onGetList } = this.props;\n    onClearState();\n    onGetList();\n  }\n\n  setLarge = (large) => {\n    this.setState({\n      large\n    })\n  }\n\n  onUpdate = (large, item) =>{\n    const { onGetDetail } = this.props;\n    this.setState({\n      large\n    })\n    if(item){onGetDetail(item)}\n    //onGetDetail(item)\n  }\n\n  onClose = (large) =>{\n    const { onClearDetail } = this.props;\n    this.setState({\n      large\n    })\n    onClearDetail();\n  }\n\n  onSubmit = (data, _id) =>{\n    const { onCreate, onUpdate } = this.props;\n    if(_id === ''){\n      onCreate(data);\n    }\n    else {\n      onUpdate(_id, data);\n    }\n  }\n\n  render () {\n    const {large} = this.state;\n    const {listOperations} = this.props;\n    return (\n      <>\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <h5 className=\"float-left my-2\">Danh sách hệ điều hành</h5>\n                <CButton\n                  onClick={() => this.setLarge(!large)}\n                  className=\"mb-1 float-right\"\n                  color=\"success\"\n                > Thêm loại sản phẩm\n                </CButton>\n              </CCardHeader>\n\n              <CCardBody>\n                <CDataTable\n                  items={listOperations}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {{\n                    'name': (item) => (\n                      <td>{item.operation}</td>\n                    ),\n                    'actions':\n                    (item)=>(\n                      <td>\n                        <CButton\n                          onClick={() => this.onUpdate(!large, item._id)}\n                          className=\"mr-1 mb-1 mb-xl-0\"\n                          color=\"warning\"\n                        >\n                          Sửa\n                        </CButton>\n                        <CButton\n                          onClick={() => this.setLarge(!large)}\n                          className=\"mr-1\"\n                          color=\"danger\"\n                        >\n                          Xóa\n                        </CButton>\n                      </td>)\n                  }}\n                />\n                {/* {(productDetail && large) && <OperationDetail large={large} product={productDetail} onClose={this.onClose}\n                setImage={this.setImage} listCategories={listCategories} listBrands={listBrands} onClearDetail={onClearDetail}\n                onSubmit={this.onSubmit}/>}\n\n                {(!productDetail && large) && <OperationDetail large={large} product={productDetail} onClose={this.onClose}\n                setImage={this.setImage} listCategories={listCategories} listBrands={listBrands} onClearDetail={onClearDetail}\n                onSubmit={this.onSubmit}/>} */}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    listOperations: state.operations.list,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetList: () => {\n      dispatch(OperationActions.onGetList())\n    },\n    onClearState: () =>{\n      dispatch(OperationActions.onClearState())\n    },\n    onClearDetail: () =>{\n      dispatch(OperationActions.onClearDetail())\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList)\n"]},"metadata":{},"sourceType":"module"}