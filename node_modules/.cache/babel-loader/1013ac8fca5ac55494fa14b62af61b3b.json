{"ast":null,"code":"import _objectSpread from \"/Users/vyduong/Downloads/CMD_WebBanDienThoai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/vyduong/Downloads/CMD_WebBanDienThoai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreate),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getDetailCategory, addCategory, updateCategory, deleteCategory } from \"../apis/categories\";\nimport { addImage } from \"../apis/cloudinary\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllCategories, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 8;\n          return put(CategoryActions.onGetListSuccess(data.categorys, data.total));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(CategoryActions.onGetListError(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailCategory, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n          _context2.next = 8;\n          return put(CategoryActions.onGetDetailSuccess(data.category));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 14;\n          return put(CategoryActions.onGetDetailError(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\n/**\n *\n * create\n */\n\n\nfunction handleCreate(_ref3) {\n  var payload, result, image, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n\n          if (!(typeof payload.data.image !== \"string\")) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 5;\n          return call(addImage, payload.data.image);\n\n        case 5:\n          image = _context3.sent;\n          _context3.next = 8;\n          return call(addCategory, _objectSpread(_objectSpread({}, payload.data), {}, {\n            \"image\": image.data.images[0]._id\n          }));\n\n        case 8:\n          result = _context3.sent;\n          _context3.next = 14;\n          break;\n\n        case 11:\n          _context3.next = 13;\n          return call(addCategory, payload.data);\n\n        case 13:\n          result = _context3.sent;\n\n        case 14:\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 201)) {\n            _context3.next = 17;\n            break;\n          }\n\n          throw data;\n\n        case 17:\n          _context3.next = 19;\n          return put(CategoryActions.onCreateSuccess(data.category));\n\n        case 19:\n          _context3.next = 21;\n          return put(CategoryActions.onGetList(payload.params));\n\n        case 21:\n          _context3.next = 27;\n          break;\n\n        case 23:\n          _context3.prev = 23;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 27;\n          return put(CategoryActions.onCreateError(_context3.t0));\n\n        case 27:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 23]]);\n}\n/**\n *\n * update\n */\n\n\nfunction handleUpdate(_ref4) {\n  var payload, result, image, data, detailResult;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context4.prev = 1;\n\n          if (!(typeof payload.data.image !== \"string\")) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 5;\n          return call(addImage, payload.data.image);\n\n        case 5:\n          image = _context4.sent;\n          _context4.next = 8;\n          return call(updateCategory, _objectSpread(_objectSpread({}, payload.data), {}, {\n            \"image\": image.data.images[0]._id\n          }), payload.id);\n\n        case 8:\n          result = _context4.sent;\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.next = 13;\n          return call(updateCategory, payload.data, payload.id);\n\n        case 13:\n          result = _context4.sent;\n\n        case 14:\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 17;\n            break;\n          }\n\n          throw data;\n\n        case 17:\n          _context4.next = 19;\n          return call(getDetailCategory, payload.id);\n\n        case 19:\n          detailResult = _context4.sent;\n          _context4.next = 22;\n          return put(CategoryActions.onUpdateSuccess(detailResult.data.category));\n\n        case 22:\n          _context4.next = 24;\n          return put(CategoryActions.onGetList(payload.params));\n\n        case 24:\n          _context4.next = 30;\n          break;\n\n        case 26:\n          _context4.prev = 26;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.next = 30;\n          return put(CategoryActions.onUpdateError(_context4.t0));\n\n        case 30:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 26]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref5) {\n  var id, params, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref5.id, params = _ref5.params;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(deleteCategory, id);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(CategoryActions.onDeleteSuccess(data));\n\n        case 10:\n          _context5.next = 12;\n          return put(CategoryActions.onGetList(params));\n\n        case 12:\n          _context5.next = 18;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 18;\n          return put(CategoryActions.onDeleteError(_context5.t0));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 14]]);\n}\n/**\n *\n */\n\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function watchCreate() {\n  return _regeneratorRuntime.wrap(function watchCreate$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(CategoryActionTypes.CREATE, handleCreate);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function watchUpdate() {\n  return _regeneratorRuntime.wrap(function watchUpdate$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(CategoryActionTypes.UPDATE, handleUpdate);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(CategoryActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchCreate), fork(watchUpdate), fork(watchDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["/Users/vyduong/Downloads/CMD_WebBanDienThoai/src/redux/sagas/categories.js"],"names":["handleGetList","handleGetDetail","handleCreate","handleUpdate","handleDelete","watchGetList","watchGetDetail","watchCreate","watchUpdate","watchDelete","rootSaga","takeEvery","fork","all","call","put","get","CategoryActions","CategoryActionTypes","getAllCategories","getDetailCategory","addCategory","updateCategory","deleteCategory","addImage","payload","result","data","onGetListSuccess","categorys","total","onGetListError","filters","id","onGetDetailSuccess","category","onGetDetailError","image","images","_id","code","onCreateSuccess","onGetList","params","onCreateError","detailResult","onUpdateSuccess","onUpdateError","onDeleteSuccess","onDeleteError","GET_LIST","GET_DETAIL","CREATE","UPDATE","DELETE"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getDetailCategory, addCategory, updateCategory, deleteCategory } from \"../apis/categories\";\nimport { addImage } from \"../apis/cloudinary\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllCategories, payload);\n    const data = get(result, \"data\");\n    yield put(CategoryActions.onGetListSuccess(data.categorys, data.total));\n  } catch (error) {\n    yield put(CategoryActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailCategory, id);\n    const data = get(result, \"data\", {});\n    yield put(CategoryActions.onGetDetailSuccess(data.category));\n  } catch (error) {\n    yield put(CategoryActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  try {\n    var result;\n    if(typeof payload.data.image !== \"string\"){\n      const image = yield call(addImage, payload.data.image);\n      result = yield call(addCategory,\n      { ...payload.data,\n        \"image\": image.data.images[0]._id\n      });\n    }\n    else {\n      result = yield call(addCategory, payload.data);\n    }\n    const data = get(result, \"data\", {});\n    if (data.code !== 201) throw data;\n    yield put(CategoryActions.onCreateSuccess(data.category));\n    yield put(CategoryActions.onGetList(payload.params));\n  } catch (error) {\n    yield put(CategoryActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\nfunction* handleUpdate({ payload }) {\n  try {\n    var result;\n    if(typeof payload.data.image !== \"string\"){\n      const image = yield call(addImage, payload.data.image);\n      result = yield call(updateCategory,\n      { ...payload.data,\n        \"image\": image.data.images[0]._id\n      }, payload.id);\n    }\n    else {\n      result = yield call(updateCategory, payload.data, payload.id);\n    }\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    const detailResult = yield call(getDetailCategory, payload.id);\n    yield put(CategoryActions.onUpdateSuccess(detailResult.data.category));\n    yield put(CategoryActions.onGetList(payload.params));\n  } catch (error) {\n    yield put(CategoryActions.onUpdateError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id, params }) {\n  try {\n    const result = yield call(deleteCategory, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(CategoryActions.onDeleteSuccess(data));\n    yield put(CategoryActions.onGetList(params));\n  } catch (error) {\n    yield put(CategoryActions.onDeleteError(error));\n  }\n}\n\n/**\n *\n */\n\nexport function* watchGetList() {\n  yield takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n}\nexport function* watchCreate() {\n  yield takeEvery(CategoryActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(CategoryActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(CategoryActionTypes.DELETE, handleDelete);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetDetail),\n    fork(watchCreate),\n    fork(watchUpdate),\n    fork(watchDelete),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}