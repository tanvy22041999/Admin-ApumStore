{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\components\\\\Operations\\\\OperationList.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n// @Components\n\nimport { CCard, CCardBody, CCardHeader, CCol, CDataTable, CButton, CRow } from '@coreui/react';\nimport OperationDetail from './OperationDetail'; // @Actions\n\nimport OperationActions from \"../../redux/actions/operations\";\nvar fields = ['name', {\n  key: 'actions',\n  _style: {\n    width: '15%'\n  }\n}];\n\nvar ProductList = /*#__PURE__*/function (_Component) {\n  _inherits(ProductList, _Component);\n\n  var _super = _createSuper(ProductList);\n\n  function ProductList(props) {\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    _this = _super.call(this, props);\n\n    _this.setLarge = function (large) {\n      _this.setState({\n        large: large\n      });\n    };\n\n    _this.submit = function (id) {\n      confirmAlert({\n        title: 'Thông báo',\n        message: 'Bạn có thực sự muốn xóa operation này?',\n        buttons: [{\n          label: 'Yes',\n          onClick: function onClick() {\n            return _this.onDelete(id);\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    _this.onDelete = function (_id) {\n      var onDelete = _this.props.onDelete;\n      onDelete(_id);\n    };\n\n    _this.onUpdate = function (large, item) {\n      var onGetDetail = _this.props.onGetDetail;\n\n      _this.setState({\n        large: large\n      });\n\n      if (item) {\n        onGetDetail(item);\n      }\n    };\n\n    _this.onClose = function (large) {\n      var onClearDetail = _this.props.onClearDetail;\n\n      _this.setState({\n        large: large\n      });\n\n      onClearDetail();\n    };\n\n    _this.state = {\n      large: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          onClearState = _this$props.onClearState,\n          onGetList = _this$props.onGetList;\n      onClearState();\n      onGetList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var large = this.state.large;\n      var _this$props2 = this.props,\n          listOperations = _this$props2.listOperations,\n          operationDetail = _this$props2.operationDetail,\n          onClearDetail = _this$props2.onClearDetail;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CCol, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CCardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"float-left my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"Danh s\\xE1ch h\\u1EC7 \\u0111i\\u1EC1u h\\xE0nh\"), /*#__PURE__*/React.createElement(CButton, {\n        onClick: function onClick() {\n          return _this2.setLarge(!large);\n        },\n        className: \"mb-1 float-right\",\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \" Th\\xEAm h\\u1EC7 \\u0111i\\u1EC1u h\\xE0nh\")), /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CDataTable, {\n        items: listOperations,\n        fields: fields,\n        hover: true,\n        striped: true,\n        bordered: true,\n        itemsPerPage: 10,\n        pagination: true,\n        scopedSlots: {\n          'name': function name(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 23\n              }\n            }, item.operation);\n          },\n          'actions': function actions(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.onUpdate(!large, item._id);\n              },\n              className: \"mr-1 mb-1 mb-xl-0\",\n              color: \"warning\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }\n            }, \"S\\u1EEDa\"), /*#__PURE__*/React.createElement(CButton, {\n              onClick: function onClick() {\n                return _this2.submit(item._id);\n              },\n              className: \"mr-1\",\n              color: \"danger\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }\n            }, \"X\\xF3a\"));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }), operationDetail && large && /*#__PURE__*/React.createElement(OperationDetail, {\n        large: large,\n        operation: operationDetail,\n        onClose: this.onClose,\n        onClearDetail: onClearDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 48\n        }\n      }), !operationDetail && large && /*#__PURE__*/React.createElement(OperationDetail, {\n        large: large,\n        onClose: this.onClose,\n        onClearDetail: onClearDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 49\n        }\n      }))))));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listOperations: state.operations.list,\n    operationDetail: state.operations.detail\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetList: function onGetList() {\n      dispatch(OperationActions.onGetList());\n    },\n    onClearState: function onClearState() {\n      dispatch(OperationActions.onClearState());\n    },\n    onClearDetail: function onClearDetail() {\n      dispatch(OperationActions.onClearDetail());\n    },\n    onGetDetail: function onGetDetail(id) {\n      dispatch(OperationActions.onGetDetail(id));\n    },\n    onDelete: function onDelete(id) {\n      dispatch(OperationActions.onDelete({\n        id: id\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/components/Operations/OperationList.js"],"names":["React","Component","connect","confirmAlert","CCard","CCardBody","CCardHeader","CCol","CDataTable","CButton","CRow","OperationDetail","OperationActions","fields","key","_style","width","ProductList","props","setLarge","large","setState","submit","id","title","message","buttons","label","onClick","onDelete","_id","onUpdate","item","onGetDetail","onClose","onClearDetail","state","onClearState","onGetList","listOperations","operationDetail","operation","mapStateToProps","operations","list","detail","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react'\nimport { connect } from \"react-redux\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n// @Components\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CButton,\n  CRow,\n} from '@coreui/react'\nimport OperationDetail from './OperationDetail'\n// @Actions\nimport OperationActions from \"../../redux/actions/operations\";\n\nconst fields = ['name', { key: 'actions', _style: { width: '15%'} }]\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      large: false,\n    }\n  }\n  componentDidMount() {\n    const { onClearState, onGetList } = this.props;\n    onClearState();\n    onGetList();\n  }\n\n  setLarge = (large) => {\n    this.setState({\n      large\n    })\n  }\n  submit = (id) => {\n    confirmAlert({\n      title: 'Thông báo',\n      message: 'Bạn có thực sự muốn xóa operation này?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.onDelete(id)\n        },\n        {\n          label: 'No'\n        }\n      ]\n    });\n  };\n  onDelete = (_id)=>{\n    const {onDelete} = this.props;\n    onDelete(_id);\n  }\n\n  onUpdate = (large, item) =>{\n    const { onGetDetail } = this.props;\n    this.setState({\n      large\n    })\n    if(item){onGetDetail(item)}\n  }\n\n  onClose = (large) =>{\n    const { onClearDetail } = this.props;\n    this.setState({\n      large\n    })\n    onClearDetail();\n  }\n\n  render () {\n    const {large} = this.state;\n    const {listOperations, operationDetail, onClearDetail} = this.props;\n    return (\n      <>\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <h5 className=\"float-left my-2\">Danh sách hệ điều hành</h5>\n                <CButton\n                  onClick={() => this.setLarge(!large)}\n                  className=\"mb-1 float-right\"\n                  color=\"success\"\n                > Thêm hệ điều hành\n                </CButton>\n              </CCardHeader>\n\n              <CCardBody>\n                <CDataTable\n                  items={listOperations}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {{\n                    'name': (item) => (\n                      <td>{item.operation}</td>\n                    ),\n                    'actions':\n                    (item)=>(\n                      <td>\n                        <CButton\n                          onClick={() => this.onUpdate(!large, item._id)}\n                          className=\"mr-1 mb-1 mb-xl-0\"\n                          color=\"warning\"\n                        >\n                          Sửa\n                        </CButton>\n                        <CButton\n                          onClick={() => this.submit(item._id)}\n                          className=\"mr-1\"\n                          color=\"danger\"\n                        >\n                          Xóa\n                        </CButton>\n                      </td>)\n                  }}\n                />\n                {(operationDetail && large) && <OperationDetail large={large} operation={operationDetail} onClose={this.onClose}\n                onClearDetail={onClearDetail}/>}\n                {(!operationDetail && large) && <OperationDetail large={large} onClose={this.onClose}\n                onClearDetail={onClearDetail}/>}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    listOperations: state.operations.list,\n    operationDetail: state.operations.detail,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetList: () => {\n      dispatch(OperationActions.onGetList())\n    },\n    onClearState: () =>{\n      dispatch(OperationActions.onClearState())\n    },\n    onClearDetail: () =>{\n      dispatch(OperationActions.onClearDetail())\n    },\n    onGetDetail: (id) => {\n      dispatch(OperationActions.onGetDetail(id))\n    },\n    onDelete: (id) =>{\n      dispatch(OperationActions.onDelete({id}))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList)\n"]},"metadata":{},"sourceType":"module"}