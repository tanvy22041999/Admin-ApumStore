{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\views\\\\charts\\\\MainChartExample.js\";\n\nimport React from 'react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils/src'; //const brandSuccess = getStyle('success') || '#4dbd74'\n\nvar brandInfo = getStyle('info') || '#20a8d8'; //const brandDanger = getStyle('danger') || '#f86c6b'\n\nvar MainChartExample = function MainChartExample(attributes) {\n  console.log(attributes.data);\n\n  var defaultDatasets = function () {\n    var thisMonth = new Date();\n    var elements = thisMonth.getMonth();\n    var data1 = [];\n\n    for (var i = 0; i <= elements; i++) {\n      attributes.data.map(function (item) {\n        console.log(item._id.month);\n      });\n    }\n\n    return [{\n      label: 'My First dataset',\n      backgroundColor: hexToRgba(brandInfo, 10),\n      borderColor: brandInfo,\n      pointHoverBackgroundColor: brandInfo,\n      borderWidth: 2,\n      data: data1\n    }\n    /* {\n      label: 'My Second dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandSuccess,\n      pointHoverBackgroundColor: brandSuccess,\n      borderWidth: 2,\n      data: data2\n    },\n    {\n      label: 'My Third dataset',\n      backgroundColor: 'transparent',\n      borderColor: brandDanger,\n      pointHoverBackgroundColor: brandDanger,\n      borderWidth: 1,\n      borderDash: [8, 5],\n      data: data3\n    } */\n    ];\n  }();\n\n  var defaultOptions = function () {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 250\n          },\n          gridLines: {\n            display: true\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  }(); // render\n\n\n  return /*#__PURE__*/React.createElement(CChartLine, Object.assign({}, attributes, {\n    datasets: defaultDatasets,\n    options: defaultOptions,\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default MainChartExample;","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/views/charts/MainChartExample.js"],"names":["React","CChartLine","getStyle","hexToRgba","brandInfo","MainChartExample","attributes","console","log","data","defaultDatasets","thisMonth","Date","elements","getMonth","data1","i","map","item","_id","month","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","point","radius","hitRadius","hoverRadius","hoverBorderWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC,C,CAEA;;AACA,IAAMC,SAAS,GAAGF,QAAQ,CAAC,MAAD,CAAR,IAAoB,SAAtC,C,CACA;;AAEA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAgB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACG,IAAvB;;AACA,MAAMC,eAAe,GAAI,YAAI;AAC3B,QAAIC,SAAS,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAIC,QAAQ,GAAGF,SAAS,CAACG,QAAV,EAAf;AACA,QAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,QAArB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCV,MAAAA,UAAU,CAACG,IAAX,CAAgBQ,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AAC1BX,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAI,CAACC,GAAL,CAASC,KAArB;AACD,OAFD;AAGD;;AACD,WAAO,CACL;AACEC,MAAAA,KAAK,EAAE,kBADT;AAEEC,MAAAA,eAAe,EAAEnB,SAAS,CAACC,SAAD,EAAY,EAAZ,CAF5B;AAGEmB,MAAAA,WAAW,EAAEnB,SAHf;AAIEoB,MAAAA,yBAAyB,EAAEpB,SAJ7B;AAKEqB,MAAAA,WAAW,EAAE,CALf;AAMEhB,MAAAA,IAAI,EAAEM;AANR;AAQA;;;;;;;;;;;;;;;;;AATK,KAAP;AA2BD,GApCuB,EAAxB;;AAsCA,MAAMW,cAAc,GAAI,YAAI;AAC1B,WAAO;AACHC,MAAAA,mBAAmB,EAAE,KADlB;AAEHC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OAFL;AAKHC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,SAAS,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR;AADL,SAAD,CADD;AAMNC,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE,IADR;AAELC,YAAAA,aAAa,EAAE,CAFV;AAGLC,YAAAA,QAAQ,EAAEC,IAAI,CAACC,IAAL,CAAU,MAAM,CAAhB,CAHL;AAILC,YAAAA,GAAG,EAAE;AAJA,WADD;AAONT,UAAAA,SAAS,EAAE;AACTH,YAAAA,OAAO,EAAE;AADA;AAPL,SAAD;AAND,OALL;AAuBHhB,MAAAA,QAAQ,EAAE;AACR6B,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,CADH;AAELC,UAAAA,SAAS,EAAE,EAFN;AAGLC,UAAAA,WAAW,EAAE,CAHR;AAILC,UAAAA,gBAAgB,EAAE;AAJb;AADC;AAvBP,KAAP;AAgCC,GAjCoB,EAAvB,CAxCuC,CA4EvC;;;AACA,sBACE,oBAAC,UAAD,oBACMxC,UADN;AAEE,IAAA,QAAQ,EAAEI,eAFZ;AAGE,IAAA,OAAO,EAAEgB,cAHX;AAIE,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CArFD;;AAwFA,eAAerB,gBAAf","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils/src'\n\n//const brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\n//const brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = (attributes) => {\n  console.log(attributes.data)\n  const defaultDatasets = (()=>{\n    var thisMonth = new Date()\n    let elements = thisMonth.getMonth()\n    const data1 = []\n    for (let i = 0; i <= elements; i++) {\n      attributes.data.map(item => {\n        console.log(item._id.month)\n      })\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      /* {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      } */\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n"]},"metadata":{},"sourceType":"module"}