{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreate),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\nimport { getAllCategories, getDetailCategory, addCategory, updateCategory, deleteCategory } from \"../apis/categories\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllCategories, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 8;\n          return put(CategoryActions.onGetListSuccess(data.categorys));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(CategoryActions.onGetListError(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailCategory, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n          _context2.next = 8;\n          return put(CategoryActions.onGetDetailSuccess(data.category));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 14;\n          return put(CategoryActions.onGetDetailError(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\n/**\r\n *\r\n * create\r\n */\n\n\nfunction handleCreate(_ref3) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(addCategory, payload.params);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 201)) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context3.next = 10;\n          return put(CategoryActions.onCreateSuccess(data.category));\n\n        case 10:\n          _context3.next = 12;\n          return put(CategoryActions.onGetList());\n\n        case 12:\n          _context3.next = 18;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 18;\n          return put(CategoryActions.onCreateError(_context3.t0));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 14]]);\n}\n/**\r\n *\r\n * update\r\n */\n\n\nfunction handleUpdate(_ref4) {\n  var payload, result, data, detailResult;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          console.log(payload);\n          _context4.prev = 2;\n          _context4.next = 5;\n          return call(updateCategory, payload.params, payload.id);\n\n        case 5:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 9;\n            break;\n          }\n\n          throw data;\n\n        case 9:\n          _context4.next = 11;\n          return call(getDetailCategory, payload.id);\n\n        case 11:\n          detailResult = _context4.sent;\n          _context4.next = 14;\n          return put(CategoryActions.onUpdateSuccess(detailResult.data.category));\n\n        case 14:\n          _context4.next = 16;\n          return put(CategoryActions.onGetList());\n\n        case 16:\n          _context4.next = 23;\n          break;\n\n        case 18:\n          _context4.prev = 18;\n          _context4.t0 = _context4[\"catch\"](2);\n          console.log(_context4.t0);\n          _context4.next = 23;\n          return put(CategoryActions.onUpdateError(_context4.t0));\n\n        case 23:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 18]]);\n}\n/**\r\n *\r\n * delete\r\n */\n\n\nfunction handleDelete(_ref5) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref5.id;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(deleteCategory, id);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(CategoryActions.onDeleteSuccess(data));\n\n        case 10:\n          _context5.next = 12;\n          return put(CategoryActions.onGetList());\n\n        case 12:\n          _context5.next = 18;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 18;\n          return put(CategoryActions.onDeleteError(_context5.t0));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 14]]);\n}\n/**\r\n *\r\n */\n\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function watchCreate() {\n  return _regeneratorRuntime.wrap(function watchCreate$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(CategoryActionTypes.CREATE, handleCreate);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function watchUpdate() {\n  return _regeneratorRuntime.wrap(function watchUpdate$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(CategoryActionTypes.UPDATE, handleUpdate);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(CategoryActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchCreate), fork(watchUpdate), fork(watchDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/categories.js"],"names":["handleGetList","handleGetDetail","handleCreate","handleUpdate","handleDelete","watchGetList","watchGetDetail","watchCreate","watchUpdate","watchDelete","rootSaga","takeEvery","fork","all","call","put","get","CategoryActions","CategoryActionTypes","getAllCategories","getDetailCategory","addCategory","updateCategory","deleteCategory","payload","result","data","onGetListSuccess","categorys","onGetListError","filters","id","onGetDetailSuccess","category","onGetDetailError","params","code","onCreateSuccess","onGetList","onCreateError","console","log","detailResult","onUpdateSuccess","onUpdateError","onDeleteSuccess","onDeleteError","GET_LIST","GET_DETAIL","CREATE","UPDATE","DELETE"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\r\nimport { get } from \"lodash\";\r\nimport CategoryActions, { CategoryActionTypes } from \"../actions/categories\";\r\nimport { getAllCategories, getDetailCategory, addCategory, updateCategory, deleteCategory } from \"../apis/categories\";\r\n\r\nfunction* handleGetList({ payload }) {\r\n  try {\r\n    const result = yield call(getAllCategories, payload);\r\n    const data = get(result, \"data\");\r\n    yield put(CategoryActions.onGetListSuccess(data.categorys));\r\n  } catch (error) {\r\n    yield put(CategoryActions.onGetListError(error));\r\n  }\r\n}\r\n\r\nfunction* handleGetDetail({ filters, id }) {\r\n  try {\r\n    const result = yield call(getDetailCategory, id);\r\n    const data = get(result, \"data\", {});\r\n    yield put(CategoryActions.onGetDetailSuccess(data.category));\r\n  } catch (error) {\r\n    yield put(CategoryActions.onGetDetailError(error));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * create\r\n */\r\nfunction* handleCreate({ payload }) {\r\n  try {\r\n    const result = yield call(addCategory, payload.params);\r\n    const data = get(result, \"data\", {});\r\n    if (data.code !== 201) throw data;\r\n    yield put(CategoryActions.onCreateSuccess(data.category));\r\n    yield put(CategoryActions.onGetList());\r\n  } catch (error) {\r\n    yield put(CategoryActions.onCreateError(error));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * update\r\n */\r\nfunction* handleUpdate({ payload }) {\r\n  console.log(payload)\r\n  try {\r\n    const result = yield call(updateCategory, payload.params, payload.id);\r\n    const data = get(result, \"data\", {});\r\n    if (data.code !== 200) throw data;\r\n    const detailResult = yield call(getDetailCategory, payload.id);\r\n    yield put(CategoryActions.onUpdateSuccess(detailResult.data.category));\r\n\r\n    yield put(CategoryActions.onGetList());\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(CategoryActions.onUpdateError(error));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * delete\r\n */\r\nfunction* handleDelete({ id }) {\r\n  try {\r\n    const result = yield call(deleteCategory, id);\r\n    const data = get(result, \"data\", {});\r\n    if (data.code !== 200) throw data;\r\n    yield put(CategoryActions.onDeleteSuccess(data));\r\n    yield put(CategoryActions.onGetList());\r\n  } catch (error) {\r\n    yield put(CategoryActions.onDeleteError(error));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n\r\nexport function* watchGetList() {\r\n  yield takeEvery(CategoryActionTypes.GET_LIST, handleGetList);\r\n}\r\nexport function* watchGetDetail() {\r\n  yield takeEvery(CategoryActionTypes.GET_DETAIL, handleGetDetail);\r\n}\r\n\r\nexport function* watchCreate() {\r\n  yield takeEvery(CategoryActionTypes.CREATE, handleCreate);\r\n}\r\nexport function* watchUpdate() {\r\n  yield takeEvery(CategoryActionTypes.UPDATE, handleUpdate);\r\n}\r\nexport function* watchDelete() {\r\n  yield takeEvery(CategoryActionTypes.DELETE, handleDelete);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchGetList),\r\n    fork(watchGetDetail),\r\n    fork(watchCreate),\r\n    fork(watchUpdate),\r\n    fork(watchDelete),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}