{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\src\\\\containers\\\\TheHeaderDropdownNotif.js\";\nimport React, { Component } from 'react';\nimport { CBadge, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from '@coreui/react';\nimport { connect } from 'react-redux';\nimport { compose } from \"redux\";\nimport CIcon from '@coreui/icons-react';\nimport io from 'socket.io-client';\nimport { toastInfo } from '../utils/toastHelper'; // @Actions\n\nimport NotificationActions from '../redux/actions/notification';\nvar ENDPOINT = 'http://localhost:3000';\nvar socket = io(ENDPOINT);\n\nvar TheHeaderDropdownNotif = /*#__PURE__*/function (_Component) {\n  _inherits(TheHeaderDropdownNotif, _Component);\n\n  var _super = _createSuper(TheHeaderDropdownNotif);\n\n  function TheHeaderDropdownNotif(props) {\n    var _this;\n\n    _classCallCheck(this, TheHeaderDropdownNotif);\n\n    _this = _super.call(this, props);\n\n    _this.onReadAllNotification = function () {\n      var onUpdateAllNotifications = _this.props.onUpdateAllNotifications;\n      onUpdateAllNotifications({\n        user: null\n      });\n\n      _this.setState({\n        itemsCount: 0\n      });\n    };\n\n    _this.state = {\n      itemsCount: 0,\n      email: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TheHeaderDropdownNotif, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          itemsCount = _this$state.itemsCount,\n          email = _this$state.email;\n      var _this$props = this.props,\n          onGetAllNotifications = _this$props.onGetAllNotifications,\n          totalNotification = _this$props.totalNotification,\n          userInfo = _this$props.userInfo;\n\n      if (userInfo !== prevProps.userInfo && userInfo) {\n        var admin = userInfo._id;\n        onGetAllNotifications({\n          admin: admin,\n          limit: 5,\n          page: 0,\n          active: 1\n        });\n      }\n\n      if (totalNotification !== prevProps.totalNotification && totalNotification) {\n        this.setState({\n          itemsCount: totalNotification\n        });\n      }\n\n      socket.on('newOrder', function (res) {\n        _this2.setState({\n          itemsCount: itemsCount + res.newOrders,\n          email: res.email\n        });\n      });\n\n      if (itemsCount !== prevState.itemsCount && itemsCount > totalNotification) {\n        toastInfo(\"\".concat(email, \" v\\u1EEBa x\\xE1c th\\u1EF1c \\u0111\\u01A1n h\\xE0ng\"));\n        var admin = userInfo._id;\n        onGetAllNotifications({\n          admin: admin,\n          limit: 5,\n          page: 0,\n          active: 1\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var itemsCount = this.state.itemsCount;\n      var listNotification = this.props.listNotification;\n      return /*#__PURE__*/React.createElement(CDropdown, {\n        inNav: true,\n        className: \"c-header-nav-item mx-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n        className: \"c-header-nav-link\",\n        caret: false,\n        onClick: function onClick() {\n          return _this3.onReadAllNotification();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-bell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), itemsCount > 0 && /*#__PURE__*/React.createElement(CBadge, {\n        shape: \"pill\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 30\n        }\n      }, itemsCount)), /*#__PURE__*/React.createElement(CDropdownMenu, {\n        placement: \"bottom-end\",\n        className: \"pt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, listNotification && listNotification.map(function (notification, index) {\n        return /*#__PURE__*/React.createElement(CDropdownItem, {\n          key: index,\n          className: \"d-block\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CIcon, {\n          name: \"cil-basket\",\n          className: \"mr-2 text-success\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold mb-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }, notification.name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, notification.content), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0 text-secondary\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        }, new Date(notification.createdAt).toLocaleDateString(\"vi-VN\")));\n      })));\n    }\n  }]);\n\n  return TheHeaderDropdownNotif;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listNotification: state.notification.list,\n    totalNotification: state.notification.total,\n    userInfo: state.auth.detail,\n    isLogin: state.auth.loggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetAllNotifications: function onGetAllNotifications(data) {\n      dispatch(NotificationActions.onGetList(data));\n    },\n    onUpdateAllNotifications: function onUpdateAllNotifications(data) {\n      dispatch(NotificationActions.onUpdateAll(data));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(TheHeaderDropdownNotif);","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/containers/TheHeaderDropdownNotif.js"],"names":["React","Component","CBadge","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","connect","compose","CIcon","io","toastInfo","NotificationActions","ENDPOINT","socket","TheHeaderDropdownNotif","props","onReadAllNotification","onUpdateAllNotifications","user","setState","itemsCount","state","email","prevProps","prevState","onGetAllNotifications","totalNotification","userInfo","admin","_id","limit","page","active","on","res","newOrders","listNotification","map","notification","index","name","content","Date","createdAt","toLocaleDateString","mapStateToProps","list","total","auth","detail","isLogin","loggedIn","mapDispatchToProps","dispatch","data","onGetList","onUpdateAll","withConnect"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle\n} from '@coreui/react'\nimport { connect } from 'react-redux';\nimport { compose } from \"redux\";\nimport CIcon from '@coreui/icons-react'\nimport io from 'socket.io-client';\nimport { toastInfo } from '../utils/toastHelper';\n// @Actions\nimport NotificationActions from '../redux/actions/notification'\n\nconst ENDPOINT = 'http://localhost:3000';\nlet socket = io(ENDPOINT);\n\nclass TheHeaderDropdownNotif extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      itemsCount : 0,\n      email: \"\"\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const {itemsCount, email} = this.state;\n    const {onGetAllNotifications, totalNotification, userInfo} = this.props\n    if (userInfo !== prevProps.userInfo && userInfo) {\n      var admin = userInfo._id;\n      onGetAllNotifications({admin, limit: 5, page: 0, active: 1})\n    }\n    if (totalNotification !== prevProps.totalNotification && totalNotification) {\n      this.setState({itemsCount: totalNotification})\n    }\n    socket.on('newOrder', res => {\n      this.setState({itemsCount: itemsCount + res.newOrders, email: res.email});\n    });\n    if (itemsCount !== prevState.itemsCount && itemsCount > totalNotification) {\n      toastInfo(`${email} vừa xác thực đơn hàng`)\n      var admin = userInfo._id;\n      onGetAllNotifications({admin, limit: 5, page: 0, active: 1})\n    }\n  }\n\n  onReadAllNotification = () =>{\n    const {onUpdateAllNotifications} = this.props;\n    onUpdateAllNotifications({user: null})\n    this.setState({itemsCount : 0})\n  }\n\n  render(){\n    const {itemsCount} = this.state;\n    const {listNotification} = this.props;\n    return (\n      <CDropdown\n        inNav\n        className=\"c-header-nav-item mx-2\"\n      >\n        <CDropdownToggle className=\"c-header-nav-link\" caret={false} onClick={()=>this.onReadAllNotification()}>\n          <CIcon name=\"cil-bell\"/>\n          {itemsCount > 0 && <CBadge shape=\"pill\" color=\"danger\">{itemsCount}</CBadge>}\n        </CDropdownToggle>\n        <CDropdownMenu  placement=\"bottom-end\" className=\"pt-0\">\n          {listNotification\n          && listNotification.map((notification, index)=>{\n            return(\n            <CDropdownItem key={index} className=\"d-block\">\n              <CIcon name=\"cil-basket\" className=\"mr-2 text-success\" />\n              <span className=\"font-weight-bold mb-0\">{notification.name}</span>\n              <p className=\"mb-0\">{notification.content}</p>\n              <p className=\"mb-0 text-secondary\">{new Date(notification.createdAt).toLocaleDateString(\"vi-VN\")}</p>\n            </CDropdownItem>\n            )\n          })}\n        </CDropdownMenu>\n      </CDropdown>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    listNotification: state.notification.list,\n    totalNotification: state.notification.total,\n    userInfo: state.auth.detail,\n    isLogin: state.auth.loggedIn,\n  }\n}\n\nconst mapDispatchToProps =(dispatch)=> {\n\treturn {\n\t\tonGetAllNotifications : (data) =>{\n\t\t\tdispatch(NotificationActions.onGetList(data))\n    },\n    onUpdateAllNotifications : (data) =>{\n\t\t\tdispatch(NotificationActions.onUpdateAll(data))\n    },\n\t}\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)\nexport default compose(\n  withConnect\n)(TheHeaderDropdownNotif)\n"]},"metadata":{},"sourceType":"module"}