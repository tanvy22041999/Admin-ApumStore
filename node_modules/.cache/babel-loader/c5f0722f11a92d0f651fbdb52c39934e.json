{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleUpdate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreate),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdate),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport OperationActions, { OperationActionTypes } from \"../actions/operations\";\nimport { getAllOperations, getDetailOperation, addOperation, updateOperation, deleteOperation } from \"../apis/operations\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllOperations, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context.next = 10;\n          return put(OperationActions.onGetListSuccess(data.operations));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 16;\n          return put(OperationActions.onGetListError(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailOperation, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context2.next = 10;\n          return put(OperationActions.onGetDetailSuccess(data.category));\n\n        case 10:\n          _context2.next = 16;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 16;\n          return put(OperationActions.onGetDetailError(_context2.t0));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 12]]);\n}\n/**\n *\n * create\n */\n\n\nfunction handleCreate(_ref3) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(addOperation, payload.params);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 201)) {\n            _context3.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context3.next = 10;\n          return put(OperationActions.onCreateSuccess(data.operation));\n\n        case 10:\n          _context3.next = 12;\n          return put(OperationActions.onGetList());\n\n        case 12:\n          _context3.next = 18;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 18;\n          return put(OperationActions.onCreateError(_context3.t0));\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 14]]);\n}\n/**\n *\n * update\n */\n\n\nfunction handleUpdate(_ref4) {\n  var payload, result, data, detailResult;\n  return _regeneratorRuntime.wrap(function handleUpdate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(updateOperation, payload.params, payload.id);\n\n        case 4:\n          result = _context4.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context4.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context4.next = 10;\n          return call(getDetailOperation, payload.id);\n\n        case 10:\n          detailResult = _context4.sent;\n          _context4.next = 13;\n          return put(OperationActions.onUpdateSuccess(get(detailResult, \"data\")));\n\n        case 13:\n          _context4.next = 15;\n          return put(OperationActions.onGetList());\n\n        case 15:\n          _context4.next = 22;\n          break;\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log(_context4.t0);\n          _context4.next = 22;\n          return put(OperationActions.onUpdateError(_context4.t0));\n\n        case 22:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[1, 17]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref5) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          id = _ref5.id;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return call(deleteOperation, id);\n\n        case 4:\n          result = _context5.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context5.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context5.next = 10;\n          return put(OperationActions.onDeleteSuccess(data));\n\n        case 10:\n          _context5.next = 12;\n          return put(OperationActions.onGetList());\n\n        case 12:\n          _context5.next = 18;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 18;\n          return put(OperationActions.onDeleteError(_context5.t0));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 14]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(OperationActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(OperationActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function watchCreate() {\n  return _regeneratorRuntime.wrap(function watchCreate$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(OperationActionTypes.CREATE, handleCreate);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function watchUpdate() {\n  return _regeneratorRuntime.wrap(function watchUpdate$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(OperationActionTypes.UPDATE, handleUpdate);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(OperationActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchCreate), fork(watchUpdate), fork(watchDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/operations.js"],"names":["handleGetList","handleGetDetail","handleCreate","handleUpdate","handleDelete","watchGetList","watchGetDetail","watchCreate","watchUpdate","watchDelete","rootSaga","takeEvery","fork","all","call","put","get","OperationActions","OperationActionTypes","getAllOperations","getDetailOperation","addOperation","updateOperation","deleteOperation","payload","result","data","code","onGetListSuccess","operations","onGetListError","filters","id","onGetDetailSuccess","category","onGetDetailError","params","onCreateSuccess","operation","onGetList","onCreateError","detailResult","onUpdateSuccess","console","log","onUpdateError","onDeleteSuccess","onDeleteError","GET_LIST","GET_DETAIL","CREATE","UPDATE","DELETE"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport OperationActions, { OperationActionTypes } from \"../actions/operations\";\nimport { getAllOperations, getDetailOperation, addOperation, updateOperation, deleteOperation } from \"../apis/operations\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllOperations, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(OperationActions.onGetListSuccess(data.operations));\n  } catch (error) {\n    yield put(OperationActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailOperation, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(OperationActions.onGetDetailSuccess(data.category));\n  } catch (error) {\n    yield put(OperationActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate({ payload }) {\n  try {\n    const result = yield call(addOperation, payload.params);\n    const data = get(result, \"data\", {});\n    if (data.code !== 201) throw data;\n    yield put(OperationActions.onCreateSuccess(data.operation));\n    yield put(OperationActions.onGetList());\n  } catch (error) {\n    yield put(OperationActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\nfunction* handleUpdate({ payload }) {\n  try {\n    const result = yield call(updateOperation, payload.params, payload.id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    const detailResult = yield call(getDetailOperation, payload.id);\n    yield put(OperationActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(OperationActions.onGetList());\n  } catch (error) {\n    console.log(error);\n    yield put(OperationActions.onUpdateError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id }) {\n  try {\n    const result = yield call(deleteOperation, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(OperationActions.onDeleteSuccess(data));\n    yield put(OperationActions.onGetList());\n  } catch (error) {\n    yield put(OperationActions.onDeleteError(error));\n  }\n}\n\nexport function* watchGetList() {\n  yield takeEvery(OperationActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchGetDetail() {\n  yield takeEvery(OperationActionTypes.GET_DETAIL, handleGetDetail);\n}\nexport function* watchCreate() {\n  yield takeEvery(OperationActionTypes.CREATE, handleCreate);\n}\nexport function* watchUpdate() {\n  yield takeEvery(OperationActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(OperationActionTypes.DELETE, handleDelete);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetDetail),\n    fork(watchCreate),\n    fork(watchUpdate),\n    fork(watchDelete),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}