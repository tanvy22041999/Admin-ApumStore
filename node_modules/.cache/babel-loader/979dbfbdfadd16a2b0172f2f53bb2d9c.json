{"ast":null,"code":"export var BrandActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n  GET_DETAIL: \"GET_DETAIL\",\n  GET_DETAIL_SUCCESS: \"GET_DETAIL_SUCCESS\",\n  GET_DETAIL_ERROR: \"GET_DETAIL_ERROR\",\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n  CLEAR_STATE: \"CLEAR_STATE\"\n};\nObject.keys(BrandActionTypes).forEach(function (key) {\n  BrandActionTypes[key] = \"BRAND_\".concat(BrandActionTypes[key]);\n});\n\nvar onClearDetail = function onClearDetail() {\n  return {\n    type: BrandActionTypes.CLEAR_DETAIL\n  };\n};\n\nvar onClearState = function onClearState() {\n  return {\n    type: BrandActionTypes.CLEAR_STATE\n  };\n};\n\nvar onGetList = function onGetList(payload) {\n  return {\n    type: BrandActionTypes.GET_LIST,\n    payload: payload\n  };\n};\n\nvar onGetListSuccess = function onGetListSuccess(payload) {\n  return {\n    type: BrandActionTypes.GET_LIST_SUCCESS,\n    payload: payload\n  };\n};\n\nvar onGetListError = function onGetListError(error) {\n  return {\n    type: BrandActionTypes.GET_LIST_ERROR,\n    payload: error\n  };\n};\n\nvar onGetDetail = function onGetDetail(id) {\n  return {\n    type: BrandActionTypes.GET_AN_IMAGE,\n    id: id\n  };\n};\n\nvar onGetDetailSuccess = function onGetDetailSuccess(image) {\n  return {\n    type: BrandActionTypes.GET_AN_IMAGE_SUCCESS,\n    payload: image\n  };\n};\n\nvar onGetDetailError = function onGetDetailError(error) {\n  return {\n    type: BrandActionTypes.GET_AN_IMAGE_ERROR,\n    payload: error\n  };\n};\n\nvar BrandActions = {\n  onGetList: onGetList,\n  onGetListSuccess: onGetListSuccess,\n  onGetListError: onGetListError,\n  onGetDetail: onGetDetail,\n  onGetDetailSuccess: onGetDetailSuccess,\n  onGetDetailError: onGetDetailError,\n  onClearDetail: onClearDetail,\n  onClearState: onClearState\n};\nexport default BrandActions;","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/actions/brands.js"],"names":["BrandActionTypes","GET_LIST","GET_LIST_SUCCESS","GET_LIST_ERROR","GET_DETAIL","GET_DETAIL_SUCCESS","GET_DETAIL_ERROR","CLEAR_DETAIL","CLEAR_STATE","Object","keys","forEach","key","onClearDetail","type","onClearState","onGetList","payload","onGetListSuccess","onGetListError","error","onGetDetail","id","GET_AN_IMAGE","onGetDetailSuccess","image","GET_AN_IMAGE_SUCCESS","onGetDetailError","GET_AN_IMAGE_ERROR","BrandActions"],"mappings":"AAAA,OAAO,IAAMA,gBAAgB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE,UADoB;AAE9BC,EAAAA,gBAAgB,EAAE,kBAFY;AAG9BC,EAAAA,cAAc,EAAE,gBAHc;AAK9BC,EAAAA,UAAU,EAAE,YALkB;AAM9BC,EAAAA,kBAAkB,EAAE,oBANU;AAO9BC,EAAAA,gBAAgB,EAAE,kBAPY;AAS9BC,EAAAA,YAAY,EAAE,cATgB;AAU9BC,EAAAA,WAAW,EAAE;AAViB,CAAzB;AAaPC,MAAM,CAACC,IAAP,CAAYV,gBAAZ,EAA8BW,OAA9B,CAAsC,UAACC,GAAD,EAAS;AAC7CZ,EAAAA,gBAAgB,CACdY,GADc,CAAhB,mBAEaZ,gBAAgB,CAACY,GAAD,CAF7B;AAGD,CAJD;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAC3BC,IAAAA,IAAI,EAAEd,gBAAgB,CAACO;AADI,GAAP;AAAA,CAAtB;;AAIA,IAAMQ,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AAC1BD,IAAAA,IAAI,EAAEd,gBAAgB,CAACQ;AADG,GAAP;AAAA,CAArB;;AAIA,IAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD;AAAA,SAAc;AAC9BH,IAAAA,IAAI,EAAEd,gBAAgB,CAACC,QADO;AAE9BgB,IAAAA,OAAO,EAAPA;AAF8B,GAAd;AAAA,CAAlB;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,OAAD;AAAA,SAAc;AACrCH,IAAAA,IAAI,EAAEd,gBAAgB,CAACE,gBADc;AAErCe,IAAAA,OAAO,EAAPA;AAFqC,GAAd;AAAA,CAAzB;;AAKA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SAAY;AACjCN,IAAAA,IAAI,EAAEd,gBAAgB,CAACG,cADU;AAEjCc,IAAAA,OAAO,EAAEG;AAFwB,GAAZ;AAAA,CAAvB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD;AAAA,SAAS;AAC3BR,IAAAA,IAAI,EAAEd,gBAAgB,CAACuB,YADI;AAE3BD,IAAAA,EAAE,EAAFA;AAF2B,GAAT;AAAA,CAApB;;AAIA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD;AAAA,SAAY;AACrCX,IAAAA,IAAI,EAAEd,gBAAgB,CAAC0B,oBADc;AAErCT,IAAAA,OAAO,EAAEQ;AAF4B,GAAZ;AAAA,CAA3B;;AAIA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,KAAD;AAAA,SAAY;AACnCN,IAAAA,IAAI,EAAEd,gBAAgB,CAAC4B,kBADY;AAEnCX,IAAAA,OAAO,EAAEG;AAF0B,GAAZ;AAAA,CAAzB;;AAKA,IAAMS,YAAY,GAAG;AACnBb,EAAAA,SAAS,EAATA,SADmB;AAEnBE,EAAAA,gBAAgB,EAAhBA,gBAFmB;AAGnBC,EAAAA,cAAc,EAAdA,cAHmB;AAKnBE,EAAAA,WAAW,EAAXA,WALmB;AAMnBG,EAAAA,kBAAkB,EAAlBA,kBANmB;AAOnBG,EAAAA,gBAAgB,EAAhBA,gBAPmB;AASnBd,EAAAA,aAAa,EAAbA,aATmB;AAUnBE,EAAAA,YAAY,EAAZA;AAVmB,CAArB;AAaA,eAAec,YAAf","sourcesContent":["export const BrandActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n\n  GET_DETAIL: \"GET_DETAIL\",\n  GET_DETAIL_SUCCESS: \"GET_DETAIL_SUCCESS\",\n  GET_DETAIL_ERROR: \"GET_DETAIL_ERROR\",\n\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n  CLEAR_STATE: \"CLEAR_STATE\",\n};\n\nObject.keys(BrandActionTypes).forEach((key) => {\n  BrandActionTypes[\n    key\n  ] = `BRAND_${BrandActionTypes[key]}`;\n});\n\nconst onClearDetail = () => ({\n  type: BrandActionTypes.CLEAR_DETAIL,\n});\n\nconst onClearState = () => ({\n  type: BrandActionTypes.CLEAR_STATE,\n});\n\nconst onGetList = (payload) => ({\n  type: BrandActionTypes.GET_LIST,\n  payload,\n});\n\nconst onGetListSuccess = (payload) => ({\n  type: BrandActionTypes.GET_LIST_SUCCESS,\n  payload,\n});\n\nconst onGetListError = (error) => ({\n  type: BrandActionTypes.GET_LIST_ERROR,\n  payload: error,\n});\n\nconst onGetDetail = (id) => ({\n  type: BrandActionTypes.GET_AN_IMAGE,\n  id\n});\nconst onGetDetailSuccess = (image) => ({\n  type: BrandActionTypes.GET_AN_IMAGE_SUCCESS,\n  payload: image\n});\nconst onGetDetailError = (error) => ({\n  type: BrandActionTypes.GET_AN_IMAGE_ERROR,\n  payload: error\n});\n\nconst BrandActions = {\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n\n  onGetDetail,\n  onGetDetailSuccess,\n  onGetDetailError,\n\n  onClearDetail,\n  onClearState,\n};\n\nexport default BrandActions;\n"]},"metadata":{},"sourceType":"module"}