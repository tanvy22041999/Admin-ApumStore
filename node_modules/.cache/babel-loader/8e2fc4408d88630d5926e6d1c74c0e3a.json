{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleDelete),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchDelete),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport ReviewActions, { ReviewActionTypes } from \"../actions/review\";\nimport { getAllReviews, deleteReview } from \"../apis/review\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getAllReviews, payload);\n\n        case 4:\n          result = _context.sent;\n          data = get(result, \"data\");\n\n          if (!(data.code !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context.next = 10;\n          return put(ReviewActions.onGetListSuccess(data.reviews, data.total));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 16;\n          return put(ReviewActions.onGetListError(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n/**\n *\n * delete\n */\n\n\nfunction handleDelete(_ref2) {\n  var id, result, data;\n  return _regeneratorRuntime.wrap(function handleDelete$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(deleteReview, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n\n          if (!(data.code !== 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          throw data;\n\n        case 8:\n          _context2.next = 10;\n          return put(ReviewActions.onDeleteSuccess(data));\n\n        case 10:\n          _context2.next = 12;\n          return put(ReviewActions.onGetList());\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(ReviewActions.onDeleteError(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 14]]);\n}\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(ReviewActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function watchDelete() {\n  return _regeneratorRuntime.wrap(function watchDelete$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(ReviewActionTypes.DELETE, handleDelete);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchGetList), fork(watchDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/review.js"],"names":["handleGetList","handleDelete","watchGetList","watchDelete","rootSaga","takeEvery","fork","all","call","put","get","ReviewActions","ReviewActionTypes","getAllReviews","deleteReview","payload","result","data","code","onGetListSuccess","reviews","total","onGetListError","id","onDeleteSuccess","onGetList","onDeleteError","GET_LIST","DELETE"],"mappings":";;oDAKUA,a;qDAeAC,Y;qDAYOC,Y;qDAGAC,W;qDAIQC,Q;;AAvCzB,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,GAArC,QAAgD,oBAAhD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,aAAP,IAAwBC,iBAAxB,QAAiD,mBAAjD;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;;AAEA,SAAUd,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0Be,UAAAA,OAA1B,QAA0BA,OAA1B;AAAA;AAAA;AAEmB,iBAAMP,IAAI,CAACK,aAAD,EAAgBE,OAAhB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAGUC,UAAAA,IAHV,GAGiBP,GAAG,CAACM,MAAD,EAAS,MAAT,CAHpB;;AAAA,gBAIQC,IAAI,CAACC,IAAL,KAAc,GAJtB;AAAA;AAAA;AAAA;;AAAA,gBAIiCD,IAJjC;;AAAA;AAAA;AAKI,iBAAMR,GAAG,CAACE,aAAa,CAACQ,gBAAd,CAA+BF,IAAI,CAACG,OAApC,EAA6CH,IAAI,CAACI,KAAlD,CAAD,CAAT;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOI,iBAAMZ,GAAG,CAACE,aAAa,CAACW,cAAd,aAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;AAIA,SAAUrB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBsB,UAAAA,EAAzB,SAAyBA,EAAzB;AAAA;AAAA;AAEmB,iBAAMf,IAAI,CAACM,YAAD,EAAeS,EAAf,CAAV;;AAFnB;AAEUP,UAAAA,MAFV;AAGUC,UAAAA,IAHV,GAGiBP,GAAG,CAACM,MAAD,EAAS,MAAT,EAAiB,EAAjB,CAHpB;;AAAA,gBAIQC,IAAI,CAACC,IAAL,KAAc,GAJtB;AAAA;AAAA;AAAA;;AAAA,gBAIiCD,IAJjC;;AAAA;AAAA;AAKI,iBAAMR,GAAG,CAACE,aAAa,CAACa,eAAd,CAA8BP,IAA9B,CAAD,CAAT;;AALJ;AAAA;AAMI,iBAAMR,GAAG,CAACE,aAAa,CAACc,SAAd,EAAD,CAAT;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQI,iBAAMhB,GAAG,CAACE,aAAa,CAACe,aAAd,cAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAO,SAAUxB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACO,iBAAiB,CAACe,QAAnB,EAA6B3B,aAA7B,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUG,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,SAAS,CAACO,iBAAiB,CAACgB,MAAnB,EAA2B3B,YAA3B,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,eAAe,SAAUG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACRD,IAAI,CAACJ,YAAD,CADI,EAERI,IAAI,CAACH,WAAD,CAFI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, fork, all, call, put } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport ReviewActions, { ReviewActionTypes } from \"../actions/review\";\nimport { getAllReviews, deleteReview } from \"../apis/review\";\n\nfunction* handleGetList({ payload }) {\n  try {\n    const result = yield call(getAllReviews, payload);\n    const data = get(result, \"data\");\n    if (data.code !== 200) throw data;\n    yield put(ReviewActions.onGetListSuccess(data.reviews, data.total));\n  } catch (error) {\n    yield put(ReviewActions.onGetListError(error));\n  }\n}\n\n/**\n *\n * delete\n */\nfunction* handleDelete({ id }) {\n  try {\n    const result = yield call(deleteReview, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    yield put(ReviewActions.onDeleteSuccess(data));\n    yield put(ReviewActions.onGetList());\n  } catch (error) {\n    yield put(ReviewActions.onDeleteError(error));\n  }\n}\n\nexport function* watchGetList() {\n  yield takeEvery(ReviewActionTypes.GET_LIST, handleGetList);\n}\nexport function* watchDelete() {\n  yield takeEvery(ReviewActionTypes.DELETE, handleDelete);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchDelete),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}