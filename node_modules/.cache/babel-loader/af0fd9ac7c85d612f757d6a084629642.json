{"ast":null,"code":"export var NotificationActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n  GET_NEWEST: \"GET_NEWEST\",\n  GET_NEWEST_SUCCESS: \"GET_NEWEST_SUCCESS\",\n  GET_NEWEST_ERROR: \"GET_NEWEST_ERROR\",\n  CREATE: \"CREATE\",\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\n  CREATE_ERROR: \"CREATE_ERROR\",\n  UPDATE: \"UPDATE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_ERROR: \"UPDATE_ERROR\",\n  UPDATE_ALL: \"UPDATE_ALL\",\n  UPDATE_ALL_SUCCESS: \"UPDATE_ALL_SUCCESS\",\n  UPDATE_ALL_ERROR: \"UPDATE_ALL_ERROR\",\n  DELETE: \"DELETE\",\n  DELETE_SUCCESS: \"DELETE_SUCCESS\",\n  DELETE_ERROR: \"DELETE_ERROR\",\n  DELETE_ALL: \"DELETE_ALL\",\n  DELETE_ALL_SUCCESS: \"DELETE_ALL_SUCCESS\",\n  DELETE_ALL_ERROR: \"DELETE_ALL_ERROR\",\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n  CLEAR_STATE: \"CLEAR_STATE\"\n};\nObject.keys(NotificationActionTypes).forEach(function (key) {\n  NotificationActionTypes[key] = \"NOTIFICATION_\".concat(NotificationActionTypes[key]);\n});\n\nvar onClearDetail = function onClearDetail() {\n  return {\n    type: NotificationActionTypes.CLEAR_DETAIL\n  };\n};\n\nvar onClearState = function onClearState() {\n  return {\n    type: NotificationActionTypes.CLEAR_STATE\n  };\n};\n/**\n *\n * get list\n */\n\n\nvar onGetList = function onGetList(payload) {\n  return {\n    type: NotificationActionTypes.GET_LIST,\n    payload: payload\n  };\n};\n\nvar onGetListSuccess = function onGetListSuccess(list, total) {\n  return {\n    type: NotificationActionTypes.GET_LIST_SUCCESS,\n    payload: {\n      list: list,\n      total: total\n    }\n  };\n};\n\nvar onGetListError = function onGetListError(error) {\n  return {\n    type: NotificationActionTypes.GET_LIST_ERROR,\n    payload: error\n  };\n};\n\nvar onGetNewest = function onGetNewest(payload) {\n  return {\n    type: NotificationActionTypes.GET_NEWEST,\n    payload: payload\n  };\n};\n\nvar onGetNewestSuccess = function onGetNewestSuccess(detail, total) {\n  return {\n    type: NotificationActionTypes.GET_NEWEST_SUCCESS,\n    payload: {\n      detail: detail,\n      total: total\n    }\n  };\n};\n\nvar onGetNewestError = function onGetNewestError(error) {\n  return {\n    type: NotificationActionTypes.GET_NEWEST_ERROR,\n    payload: error\n  };\n};\n/**\n *\n * create\n */\n\n\nvar onCreate = function onCreate(data) {\n  return {\n    type: NotificationActionTypes.CREATE,\n    payload: data\n  };\n};\n\nvar onCreateSuccess = function onCreateSuccess(detail) {\n  return {\n    type: NotificationActionTypes.CREATE_SUCCESS,\n    payload: detail\n  };\n};\n\nvar onCreateError = function onCreateError(error) {\n  return {\n    type: NotificationActionTypes.CREATE_ERROR,\n    payload: error\n  };\n};\n/**\n *\n * update\n */\n\n\nvar onUpdate = function onUpdate(id, data) {\n  return {\n    type: NotificationActionTypes.UPDATE,\n    payload: {\n      id: id,\n      data: data\n    }\n  };\n};\n\nvar onUpdateSuccess = function onUpdateSuccess(detail) {\n  return {\n    type: NotificationActionTypes.UPDATE_SUCCESS,\n    payload: detail\n  };\n};\n\nvar onUpdateError = function onUpdateError(error) {\n  return {\n    type: NotificationActionTypes.UPDATE_ERROR,\n    payload: error\n  };\n};\n\nvar onUpdateAll = function onUpdateAll(data) {\n  return {\n    type: NotificationActionTypes.UPDATE_ALL,\n    payload: data\n  };\n};\n\nvar onUpdateAllSuccess = function onUpdateAllSuccess(payload) {\n  return {\n    type: NotificationActionTypes.UPDATE_ALL_SUCCESS,\n    payload: payload\n  };\n};\n\nvar onUpdateAllError = function onUpdateAllError(error) {\n  return {\n    type: NotificationActionTypes.UPDATE_ALL_ERROR,\n    payload: error\n  };\n};\n/**\n *\n * delete\n */\n\n\nvar onDelete = function onDelete(id) {\n  return {\n    type: NotificationActionTypes.DELETE,\n    payload: id\n  };\n};\n\nvar onDeleteSuccess = function onDeleteSuccess(detail) {\n  return {\n    type: NotificationActionTypes.DELETE_SUCCESS,\n    payload: detail\n  };\n};\n\nvar onDeleteError = function onDeleteError(error) {\n  return {\n    type: NotificationActionTypes.DELETE_ERROR,\n    payload: error\n  };\n};\n\nvar onDeleteAll = function onDeleteAll(id) {\n  return {\n    type: NotificationActionTypes.DELETE_ALL,\n    payload: id\n  };\n};\n\nvar onDeleteAllSuccess = function onDeleteAllSuccess(detail) {\n  return {\n    type: NotificationActionTypes.DELETE_ALL_SUCCESS,\n    payload: detail\n  };\n};\n\nvar onDeleteAllError = function onDeleteAllError(error) {\n  return {\n    type: NotificationActionTypes.DELETE_ALL_ERROR,\n    payload: error\n  };\n};\n\nvar NotificationActions = {\n  onGetList: onGetList,\n  onGetListSuccess: onGetListSuccess,\n  onGetListError: onGetListError,\n  onCreate: onCreate,\n  onCreateSuccess: onCreateSuccess,\n  onCreateError: onCreateError,\n  onUpdate: onUpdate,\n  onUpdateSuccess: onUpdateSuccess,\n  onUpdateError: onUpdateError,\n  onDelete: onDelete,\n  onDeleteSuccess: onDeleteSuccess,\n  onDeleteError: onDeleteError,\n  onUpdateAll: onUpdateAll,\n  onUpdateAllSuccess: onUpdateAllSuccess,\n  onUpdateAllError: onUpdateAllError,\n  onDeleteAll: onDeleteAll,\n  onDeleteAllSuccess: onDeleteAllSuccess,\n  onDeleteAllError: onDeleteAllError,\n  onClearDetail: onClearDetail,\n  onClearState: onClearState\n};\nexport default NotificationActions;","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/actions/notification.js"],"names":["NotificationActionTypes","GET_LIST","GET_LIST_SUCCESS","GET_LIST_ERROR","GET_NEWEST","GET_NEWEST_SUCCESS","GET_NEWEST_ERROR","CREATE","CREATE_SUCCESS","CREATE_ERROR","UPDATE","UPDATE_SUCCESS","UPDATE_ERROR","UPDATE_ALL","UPDATE_ALL_SUCCESS","UPDATE_ALL_ERROR","DELETE","DELETE_SUCCESS","DELETE_ERROR","DELETE_ALL","DELETE_ALL_SUCCESS","DELETE_ALL_ERROR","CLEAR_DETAIL","CLEAR_STATE","Object","keys","forEach","key","onClearDetail","type","onClearState","onGetList","payload","onGetListSuccess","list","total","onGetListError","error","onGetNewest","onGetNewestSuccess","detail","onGetNewestError","onCreate","data","onCreateSuccess","onCreateError","onUpdate","id","onUpdateSuccess","onUpdateError","onUpdateAll","onUpdateAllSuccess","onUpdateAllError","onDelete","onDeleteSuccess","onDeleteError","onDeleteAll","onDeleteAllSuccess","onDeleteAllError","NotificationActions"],"mappings":"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","sourcesContent":["export const NotificationActionTypes = {\n  GET_LIST: \"GET_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_ERROR: \"GET_LIST_ERROR\",\n\n  GET_NEWEST: \"GET_NEWEST\",\n  GET_NEWEST_SUCCESS: \"GET_NEWEST_SUCCESS\",\n  GET_NEWEST_ERROR: \"GET_NEWEST_ERROR\",\n\n  CREATE: \"CREATE\",\n  CREATE_SUCCESS: \"CREATE_SUCCESS\",\n  CREATE_ERROR: \"CREATE_ERROR\",\n\n  UPDATE: \"UPDATE\",\n  UPDATE_SUCCESS: \"UPDATE_SUCCESS\",\n  UPDATE_ERROR: \"UPDATE_ERROR\",\n\n  UPDATE_ALL: \"UPDATE_ALL\",\n  UPDATE_ALL_SUCCESS: \"UPDATE_ALL_SUCCESS\",\n  UPDATE_ALL_ERROR: \"UPDATE_ALL_ERROR\",\n\n  DELETE: \"DELETE\",\n  DELETE_SUCCESS: \"DELETE_SUCCESS\",\n  DELETE_ERROR: \"DELETE_ERROR\",\n\n  DELETE_ALL: \"DELETE_ALL\",\n  DELETE_ALL_SUCCESS: \"DELETE_ALL_SUCCESS\",\n  DELETE_ALL_ERROR: \"DELETE_ALL_ERROR\",\n\n  CLEAR_DETAIL: \"CLEAR_DETAIL\",\n  CLEAR_STATE: \"CLEAR_STATE\",\n};\n\nObject.keys(NotificationActionTypes).forEach((key) => {\n  NotificationActionTypes[key] = `NOTIFICATION_${NotificationActionTypes[key]}`;\n});\n\nconst onClearDetail = () => ({\n  type: NotificationActionTypes.CLEAR_DETAIL,\n});\n\nconst onClearState = () => ({\n  type: NotificationActionTypes.CLEAR_STATE,\n});\n\n/**\n *\n * get list\n */\n\nconst onGetList = (payload) => ({\n  type: NotificationActionTypes.GET_LIST,\n  payload,\n});\n\nconst onGetListSuccess = (list, total) => ({\n  type: NotificationActionTypes.GET_LIST_SUCCESS,\n  payload: {list, total},\n});\n\nconst onGetListError = (error) => ({\n  type: NotificationActionTypes.GET_LIST_ERROR,\n  payload: error,\n});\n\nconst onGetNewest = (payload) => ({\n  type: NotificationActionTypes.GET_NEWEST,\n  payload,\n});\n\nconst onGetNewestSuccess = (detail, total) => ({\n  type: NotificationActionTypes.GET_NEWEST_SUCCESS,\n  payload: {detail, total},\n});\n\nconst onGetNewestError = (error) => ({\n  type: NotificationActionTypes.GET_NEWEST_ERROR,\n  payload: error,\n});\n\n/**\n *\n * create\n */\n\nconst onCreate = (data) => ({\n  type: NotificationActionTypes.CREATE,\n  payload: data,\n});\n\nconst onCreateSuccess = (detail) => ({\n  type: NotificationActionTypes.CREATE_SUCCESS,\n  payload: detail,\n});\n\nconst onCreateError = (error) => ({\n  type: NotificationActionTypes.CREATE_ERROR,\n  payload: error,\n});\n\n/**\n *\n * update\n */\nconst onUpdate = (id, data) => ({\n  type: NotificationActionTypes.UPDATE,\n  payload: { id, data },\n});\n\nconst onUpdateSuccess = (detail) => ({\n  type: NotificationActionTypes.UPDATE_SUCCESS,\n  payload: detail,\n});\n\nconst onUpdateError = (error) => ({\n  type: NotificationActionTypes.UPDATE_ERROR,\n  payload: error,\n});\n\nconst onUpdateAll = (data) => ({\n  type: NotificationActionTypes.UPDATE_ALL,\n  payload: data,\n});\n\nconst onUpdateAllSuccess = (payload) => ({\n  type: NotificationActionTypes.UPDATE_ALL_SUCCESS,\n  payload,\n});\n\nconst onUpdateAllError = (error) => ({\n  type: NotificationActionTypes.UPDATE_ALL_ERROR,\n  payload: error,\n});\n\n\n/**\n *\n * delete\n */\nconst onDelete = (id) => ({\n  type: NotificationActionTypes.DELETE,\n  payload : id,\n});\n\nconst onDeleteSuccess = (detail) => ({\n  type: NotificationActionTypes.DELETE_SUCCESS,\n  payload: detail,\n});\n\nconst onDeleteError = (error) => ({\n  type: NotificationActionTypes.DELETE_ERROR,\n  payload: error,\n});\n\nconst onDeleteAll = (id) => ({\n  type: NotificationActionTypes.DELETE_ALL,\n  payload: id,\n});\n\nconst onDeleteAllSuccess = (detail) => ({\n  type: NotificationActionTypes.DELETE_ALL_SUCCESS,\n  payload: detail,\n});\n\nconst onDeleteAllError = (error) => ({\n  type: NotificationActionTypes.DELETE_ALL_ERROR,\n  payload: error,\n});\n\nconst NotificationActions = {\n  onGetList,\n  onGetListSuccess,\n  onGetListError,\n\n  onCreate,\n  onCreateSuccess,\n  onCreateError,\n\n  onUpdate,\n  onUpdateSuccess,\n  onUpdateError,\n\n  onDelete,\n  onDeleteSuccess,\n  onDeleteError,\n\n  onUpdateAll,\n  onUpdateAllSuccess,\n  onUpdateAllError,\n\n  onDeleteAll,\n  onDeleteAllSuccess,\n  onDeleteAllError,\n\n  onClearDetail,\n  onClearState,\n};\n\nexport default NotificationActions;\n"]},"metadata":{},"sourceType":"module"}