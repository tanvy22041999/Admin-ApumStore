{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ngota\\\\OneDrive\\\\Documents\\\\GitHub\\\\WebBanDienThoai\\\\CMD_WebBanDienThoai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleGetList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetDetail),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleCreate),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetList),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDetail),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreate),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, fork, all, call, put, delay } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport ProductsActions, { ProductsActionTypes } from \"../actions/products\";\nimport { getAllProducts, getDetailProduct, addProduct } from \"../apis/products\";\n\nfunction handleGetList(_ref) {\n  var payload, result, data;\n  return _regeneratorRuntime.wrap(function handleGetList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return delay(1000);\n\n        case 4:\n          _context.next = 6;\n          return call(getAllProducts, payload);\n\n        case 6:\n          result = _context.sent;\n          data = get(result, \"data\");\n          _context.next = 10;\n          return put(ProductsActions.onGetListSuccess(data.product));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 16;\n          return put(ProductsActions.onGetListError(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n\nfunction handleGetDetail(_ref2) {\n  var filters, id, result, data;\n  return _regeneratorRuntime.wrap(function handleGetDetail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filters = _ref2.filters, id = _ref2.id;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getDetailProduct, id);\n\n        case 4:\n          result = _context2.sent;\n          data = get(result, \"data\", {});\n          _context2.next = 8;\n          return put(ProductsActions.onGetDetailSuccess(data.product));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 14;\n          return put(ProductsActions.onGetDetailError(_context2.t0));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\n/**\n *\n * create\n */\n\n\nfunction handleCreate(payload) {\n  var result, data;\n  return _regeneratorRuntime.wrap(function handleCreate$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"load\", payload);\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(addProduct, payload);\n\n        case 4:\n          result = _context3.sent;\n          data = get(result, \"data\", {});\n          _context3.next = 8;\n          return put(ProductsActions.onCreateSuccess(data));\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 14;\n          return put(ProductsActions.onCreateError(_context3.t0));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 10]]);\n}\n/**\n *\n * update\n */\n\n/* function* handleUpdate({ payload, filters, callback, merchant_id }) {\n\n  try {\n    const result = yield call(EcommerceApi.Product.update, payload);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    message.success(\"Update product success!\");\n    if (callback) {\n      callback();\n    }\n\n    const detailResult = yield call(EcommerceApi.Product.getDetail, payload.id);\n    yield put(ProductsActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(ProductsActions.onGetList(filters));\n    if(merchant_id){\n      yield put(MerchantActions.onGetListProduct({id:merchant_id}));\n    }\n  } catch (error) {\n    console.log(error);\n    message.error(get(error, \"msg\", \"Error when Update product!\"));\n    yield put(ProductsActions.onUpdateError(error));\n  }\n} */\n\n/**\n *\n * delete\n */\n\n/* function* handleDelete({ id, filters, callback, merchant_id }) {\n  try {\n    const result = yield call(EcommerceApi.Product.delete, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    message.success(\"Delete product success!\");\n    if (callback) {\n      callback();\n    }\n    yield put(ProductsActions.onDeleteSuccess(data));\n    yield put(ProductsActions.onGetList(filters));\n    if(merchant_id){\n      yield put(MerchantActions.onGetListProduct({id:merchant_id}));\n    }\n  } catch (error) {\n    console.log(error);\n    message.error(get(error, \"msg\", \"Error when Delete product!\"));\n    yield put(ProductsActions.onDeleteError(error));\n  }\n} */\n\n/**\n *\n */\n\n\nexport function watchGetList() {\n  return _regeneratorRuntime.wrap(function watchGetList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(ProductsActionTypes.GET_LIST, handleGetList);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function watchGetDetail() {\n  return _regeneratorRuntime.wrap(function watchGetDetail$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(ProductsActionTypes.GET_DETAIL, handleGetDetail);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function watchCreate() {\n  return _regeneratorRuntime.wrap(function watchCreate$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(ProductsActionTypes.CREATE, handleCreate);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n/*export function* watchUpdate() {\n  yield takeEvery(ProductsActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(ProductsActionTypes.DELETE, handleDelete);\n} */\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchGetList), fork(watchGetDetail), fork(watchCreate)\n          /*fork(watchUpdate),\n          fork(watchDelete), */\n          ]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/ngota/OneDrive/Documents/GitHub/WebBanDienThoai/CMD_WebBanDienThoai/src/redux/sagas/products.js"],"names":["handleGetList","handleGetDetail","handleCreate","watchGetList","watchGetDetail","watchCreate","rootSaga","takeEvery","fork","all","call","put","delay","get","ProductsActions","ProductsActionTypes","getAllProducts","getDetailProduct","addProduct","payload","result","data","onGetListSuccess","product","onGetListError","filters","id","onGetDetailSuccess","onGetDetailError","console","log","onCreateSuccess","onCreateError","GET_LIST","GET_DETAIL","CREATE"],"mappings":"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","sourcesContent":["import { takeEvery, fork, all, call, put, delay } from \"redux-saga/effects\";\nimport { get } from \"lodash\";\nimport ProductsActions, { ProductsActionTypes } from \"../actions/products\";\nimport { getAllProducts, getDetailProduct, addProduct } from \"../apis/products\";\n\n\nfunction* handleGetList({ payload }) {\n  try {\n    yield delay(1000)\n    const result = yield call(getAllProducts, payload);\n    const data = get(result, \"data\");\n    yield put(ProductsActions.onGetListSuccess(data.product));\n  } catch (error) {\n    yield put(ProductsActions.onGetListError(error));\n  }\n}\n\nfunction* handleGetDetail({ filters, id }) {\n  try {\n    const result = yield call(getDetailProduct, id);\n    const data = get(result, \"data\", {});\n    yield put(ProductsActions.onGetDetailSuccess(data.product));\n  } catch (error) {\n    yield put(ProductsActions.onGetDetailError(error));\n  }\n}\n\n/**\n *\n * create\n */\nfunction* handleCreate( payload ) {\n  console.log(\"load\",payload);\n  try {\n    const result = yield call(addProduct, payload);\n    const data = get(result, \"data\", {});\n    yield put(ProductsActions.onCreateSuccess(data));\n  } catch (error) {\n    yield put(ProductsActions.onCreateError(error));\n  }\n}\n\n/**\n *\n * update\n */\n/* function* handleUpdate({ payload, filters, callback, merchant_id }) {\n\n  try {\n    const result = yield call(EcommerceApi.Product.update, payload);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    message.success(\"Update product success!\");\n    if (callback) {\n      callback();\n    }\n\n    const detailResult = yield call(EcommerceApi.Product.getDetail, payload.id);\n    yield put(ProductsActions.onUpdateSuccess(get(detailResult, \"data\")));\n    yield put(ProductsActions.onGetList(filters));\n    if(merchant_id){\n      yield put(MerchantActions.onGetListProduct({id:merchant_id}));\n    }\n  } catch (error) {\n    console.log(error);\n    message.error(get(error, \"msg\", \"Error when Update product!\"));\n    yield put(ProductsActions.onUpdateError(error));\n  }\n} */\n\n/**\n *\n * delete\n */\n/* function* handleDelete({ id, filters, callback, merchant_id }) {\n  try {\n    const result = yield call(EcommerceApi.Product.delete, id);\n    const data = get(result, \"data\", {});\n    if (data.code !== 200) throw data;\n    message.success(\"Delete product success!\");\n    if (callback) {\n      callback();\n    }\n    yield put(ProductsActions.onDeleteSuccess(data));\n    yield put(ProductsActions.onGetList(filters));\n    if(merchant_id){\n      yield put(MerchantActions.onGetListProduct({id:merchant_id}));\n    }\n  } catch (error) {\n    console.log(error);\n    message.error(get(error, \"msg\", \"Error when Delete product!\"));\n    yield put(ProductsActions.onDeleteError(error));\n  }\n} */\n\n/**\n *\n */\nexport function* watchGetList() {\n  yield takeEvery(ProductsActionTypes.GET_LIST, handleGetList);\n}\n\n export function* watchGetDetail() {\n  yield takeEvery(ProductsActionTypes.GET_DETAIL, handleGetDetail);\n}\n\nexport function* watchCreate() {\n  yield takeEvery(ProductsActionTypes.CREATE, handleCreate);\n}\n/*export function* watchUpdate() {\n  yield takeEvery(ProductsActionTypes.UPDATE, handleUpdate);\n}\nexport function* watchDelete() {\n  yield takeEvery(ProductsActionTypes.DELETE, handleDelete);\n} */\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetList),\n    fork(watchGetDetail),\n    fork(watchCreate),\n    /*fork(watchUpdate),\n    fork(watchDelete), */\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}